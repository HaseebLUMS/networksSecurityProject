freebsd openssh_7 SSH-2.0







================= https://webcache.googleusercontent.com/search?q=cache:jV6La0AP44EJ:https://forums.freebsd.org/threads/sshd-not-working-no-access-by-ssh-after-crash-on-12-0-release.70659/+&cd=1&hl=en&ct=clnk&gl=pk ==================





This is Google's cache of https://forums.freebsd.org/threads/sshd-not-working-no-access-by-ssh-after-crash-on-12-0-release.70659/. It is a snapshot of the page as it appeared on 20 Jul 2019 12:00:23 GMT. The current page could have changed in the meantime. Learn more.Full versionText-only versionView sourceTip: To quickly find your search term on this page, press Ctrl+F or ⌘-F (Mac) and use the find bar.
sshd not working, no access by ssh after crash on 12.0-RELEASE | The FreeBSD Forums
.
Donate to FreeBSD
.
Home
About
Introduction
Features
Advocacy
Marketing
Privacy Policy
Get FreeBSD
Release Information
Release Engineering
Documentation
FAQ
Handbook
Porter's Handbook
Developer's Handbook
Manual Pages
Documentation Project Primer
All Books and Articles
Community
Mailing Lists
Forums
User Groups
Events
Q&A (external)
Developers
Project Ideas
SVN Repository
Perforce Repository
Support
Vendors
Security Information
Bug Reports
Submit Bug-report
Foundation
Monetary Donations
Hardware Donations
Menu
Forums
New posts
Search forums
What's new
New posts
Latest activity
Log in
Register
What's new
Search
Search
Everywhere
Threads
This forum
This thread
Search titles only
By:
Search
Advanced search…
New posts
Search forums
Menu
Log in
Register
Forums
Server and Networking
Web and Network Services
JavaScript is disabled. For a better experience, please enable JavaScript in your browser before proceeding.
sshd not working, no access by ssh after crash on 12.0-RELEASE
Thread starter
jontheil
Start date
May 5, 2019
Tags
12.0-release
sshd
jontheil
Member
Messages: 75
May 5, 2019
#1
Hi forum,
After some configuration issues (tried to install www/nextcloud and set up a nullfs mount), I rebooted the server. From that point I could no longer access the server by ssh.
As far as I remember, I didn't change anything vital except for /etc/fstab.
I can't connect from any clients nor from the server itself.
Output from the client:
Code:
OpenSSH_7.8p1, OpenSSL 1.1.1a-freebsd
20 Nov 2018
debug1: Reading configuration data /etc/ssh/ssh_config
debug2: resolve_canonicalize: hostname 192.168.0.231 is address
debug2: ssh_connect_direct
debug1: Connecting to 192.168.0.231 [192.168.0.231] port 22100.
debug1: Connection established.
debug1: identity file /root/.ssh/id_rsa type 0
debug1: identity file /root/.ssh/id_rsa-cert type -1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: identity file /root/.ssh/id_dsa-cert type -1
debug1: identity file /root/.ssh/id_ecdsa type -1
debug1: identity file /root/.ssh/id_ecdsa-cert type -1
debug1: identity file /root/.ssh/id_ed25519 type -1
debug1: identity file /root/.ssh/id_ed25519-cert type -1
debug1: identity file /root/.ssh/id_xmss type -1
debug1: identity file /root/.ssh/id_xmss-cert type -1
debug1: Local version string SSH-2.0-OpenSSH_7.8 FreeBSD-20180909
debug1: Remote protocol version 2.0, remote software version OpenSSH_7.8 FreeBSD-20180909
debug1: match: OpenSSH_7.8 FreeBSD-20180909 pat OpenSSH* compat 0x04000000
debug2: fd 3 setting O_NONBLOCK
debug1: Authenticating to 192.168.0.231:22100 as 'root'
debug3: put_host_port: [192.168.0.231]:22100
debug3: Fssh_hostkeys_foreach: reading file "/root/.ssh/known_hosts"
debug3: Fssh_record_hostkey: found key type ECDSA in file /root/.ssh/known_hosts:22
debug3: Fssh_load_hostkeys: loaded 1 keys from [192.168.0.231]:22100
debug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521
debug3: send packet: type 20
debug1: SSH2_MSG_KEXINIT sent
debug3: receive packet: type 20
debug1: SSH2_MSG_KEXINIT received
debug2: local client KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c
debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib@openssh.com,zlib
debug2: compression stoc: none,zlib@openssh.com,zlib
debug2: languages ctos:
debug2: languages stoc:
debug2: first_kex_follows 0
debug2: reserved 0
debug2: peer server KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1
debug2: host key algorithms: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib@openssh.com
debug2: compression stoc: none,zlib@openssh.com
debug2: languages ctos:
debug2: languages stoc:
debug2: first_kex_follows 0
debug2: reserved 0
debug1: kex: algorithm: curve25519-sha256
debug1: kex: host key algorithm: ecdsa-sha2-nistp256
debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none
debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none
debug3: send packet: type 30
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug3: receive packet: type 31
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:wqlft+7EfHk8Qn52sH6OB1HJplSeonw/9rFGoEHYw5c
debug3: verify_host_key_dns
debug1: skipped DNS lookup for numerical hostname
debug3: put_host_port: [192.168.0.231]:22100
debug3: put_host_port: [192.168.0.231]:22100
debug3: Fssh_hostkeys_foreach: reading file "/root/.ssh/known_hosts"
debug3: Fssh_record_hostkey: found key type ECDSA in file /root/.ssh/known_hosts:22
debug3: Fssh_load_hostkeys: loaded 1 keys from [192.168.0.231]:22100
debug1: Host '[192.168.0.231]:22100' is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:22
debug3: send packet: type 21
debug2: set_newkeys: mode 1
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug3: receive packet: type 21
debug1: SSH2_MSG_NEWKEYS received
debug2: set_newkeys: mode 0
debug1: rekey after 134217728 blocks
debug2: key: /root/.ssh/id_rsa (0x800bf2070)
debug2: key: /root/.ssh/id_dsa (0x0)
debug2: key: /root/.ssh/id_ecdsa (0x0)
debug2: key: /root/.ssh/id_ed25519 (0x0)
debug2: key: /root/.ssh/id_xmss (0x0)
debug3: send packet: type 5
debug3: receive packet: type 7
debug1: SSH2_MSG_EXT_INFO received
debug1: Fssh_kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>
debug3: receive packet: type 6
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug3: send packet: type 50
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey,password,keyboard-interactive
debug3: start over, passed a different list publickey,password,keyboard-interactive
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Offering public key: RSA SHA256:YunxgVxJ/i/3X6rUmwQAWq520gV8EiCBqCllyYqT+Lo /root/.ssh/id_rsa
debug3: send packet: type 50
debug2: we sent a publickey packet, wait for reply
Connection closed by 192.168.0.231 port 22100
And from the server:
Code:
May
5 21:53:12 <auth.debug> servername sshd[17028]: debug1: Killing privsep child 17029
May
5 21:53:13 <auth.debug> servername sshd[1164]: debug1: fd 4 clearing O_NONBLOCK
May
5 21:53:13 <auth.debug> servername sshd[1164]: debug1: Forked child 17033.
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: rexec start in 4 out 4 newsock 4 pipe 6 sock 7
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: inetd sockets after dupping: 3, 3
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: res_init()
May
5 21:53:13 <auth.info> servername sshd[17033]: Connection from 192.168.1.231 port 60426 on 192.168.1.231 port 22100
May
5 21:53:13 <auth.info> servername sshd[17033]: Connection from 192.168.1.231 port 60426 on 192.168.1.231 port 22100
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: Client protocol version 2.0; client software version OpenSSH_7.8 FreeBSD-20180909
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: match: OpenSSH_7.8 FreeBSD-20180909 pat OpenSSH* compat 0x04000000
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: Local version string SSH-2.0-OpenSSH_7.8 FreeBSD-20180909
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: permanently_set_uid: 22/22 [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: list_hostkey_types: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: SSH2_MSG_KEXINIT sent [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: SSH2_MSG_KEXINIT received [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: kex: algorithm: curve25519-sha256 [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: rekey after 134217728 blocks [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: SSH2_MSG_NEWKEYS sent [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: expecting SSH2_MSG_NEWKEYS [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: SSH2_MSG_NEWKEYS received [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: rekey after 134217728 blocks [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: KEX done [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: userauth-request for user root service ssh-connection method none [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: attempt 0 failures 0 [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: PAM: initializing for "root"
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: PAM: setting PAM_RHOST to "servername"
May
5 21:53:13 <auth.info> servername sshd[17033]: Failed unknown for root from 192.168.1.231 port 60426 ssh2
May
5 21:53:13 <auth.info> servername sshd[17033]: Failed unknown for root from 192.168.1.231 port 60426 ssh2
May
5 21:53:13 <auth.info> servername sshd[17033]: user root login class root [preauth]
May
5 21:53:13 <auth.info> servername sshd[17033]: user root login class root [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: userauth-request for user root service ssh-connection method publickey [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: attempt 1 failures 0 [preauth]
May
5 21:53:13 <auth.info> servername sshd[17033]: Failed unknown for root from 192.168.1.231 port 60426 ssh2
May
5 21:53:13 <auth.info> servername sshd[17033]: Failed unknown for root from 192.168.1.231 port 60426 ssh2
May
5 21:53:13 <auth.info> servername sshd[17033]: user root login class root [preauth]
May
5 21:53:13 <auth.info> servername sshd[17033]: user root login class root [preauth]
May
5 21:53:13 <auth.debug> servername sshd[17033]: debug1: userauth_pubkey: test pkalg rsa-sha2-512 pkblob RSA SHA256:YunxgVxJ/i/3X6rUmwQAWq520gV8EiCBqCllyYqT+Lo [preauth]
May
5 21:55:58 <auth.debug> servername sshd[1164]: debug1: fd 4 clearing O_NONBLOCK
May
5 21:55:58 <auth.debug> servername sshd[1164]: debug1: Forked child 17365.
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: rexec start in 4 out 4 newsock 4 pipe 6 sock 7
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: inetd sockets after dupping: 3, 3
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: res_init()
May
5 21:55:58 <auth.info> servername sshd[17365]: Connection from 192.168.1.231 port 62867 on 192.168.1.231 port 22100
May
5 21:55:58 <auth.info> servername sshd[17365]: Connection from 192.168.1.231 port 62867 on 192.168.1.231 port 22100
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: Client protocol version 2.0; client software version check_ssh_2.2.1
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: no match: check_ssh_2.2.1
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: Local version string SSH-2.0-OpenSSH_7.8 FreeBSD-20180909
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: permanently_set_uid: 22/22 [preauth]
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: list_hostkey_types: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: SSH2_MSG_KEXINIT sent [preauth]
May
5 21:55:58 <auth.info> servername sshd[17365]: Connection closed by 192.168.1.231 port 62867 [preauth]
May
5 21:55:58 <auth.info> servername sshd[17365]: Connection closed by 192.168.1.231 port 62867 [preauth]
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: do_cleanup [preauth]
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: monitor_read_log: child log fd closed
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: do_cleanup
May
5 21:55:58 <auth.debug> servername sshd[17365]: debug1: Killing privsep child 17366
May
5 22:01:18 <auth.debug> servername sshd[1164]: debug1: fd 4 clearing O_NONBLOCK
May
5 22:01:18 <auth.debug> servername sshd[1164]: debug1: Forked child 17961.
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: rexec start in 4 out 4 newsock 4 pipe 6 sock 7
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: inetd sockets after dupping: 3, 3
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: res_init()
May
5 22:01:18 <auth.info> servername sshd[17961]: Connection from 192.168.1.231 port 37838 on 192.168.1.231 port 22100
May
5 22:01:18 <auth.info> servername sshd[17961]: Connection from 192.168.1.231 port 37838 on 192.168.1.231 port 22100
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: Client protocol version 2.0; client software version check_ssh_2.2.1
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: no match: check_ssh_2.2.1
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: Local version string SSH-2.0-OpenSSH_7.8 FreeBSD-20180909
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: permanently_set_uid: 22/22 [preauth]
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: list_hostkey_types: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: SSH2_MSG_KEXINIT sent [preauth]
May
5 22:01:18 <auth.info> servername sshd[17961]: Connection closed by 192.168.1.231 port 37838 [preauth]
May
5 22:01:18 <auth.info> servername sshd[17961]: Connection closed by 192.168.1.231 port 37838 [preauth]
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: do_cleanup [preauth]
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: monitor_read_log: child log fd closed
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: do_cleanup
May
5 22:01:18 <auth.debug> servername sshd[17961]: debug1: Killing privsep child 17962
Any suggestions will be very much appreciated.
Regards,
Jon Theil Nielsen
You must log in or register to reply here.
Share:
Reddit
Pinterest
Tumblr
WhatsApp
Email
Link
Forums
Server and Networking
Web and Network Services
FreeBSD Style
Contact us
Terms and rules
Privacy policy
Help
RSS
Forum software by XenForo® © 2010-2019 XenForo Ltd.
The mark FreeBSD is a registered trademark of The FreeBSD Foundation and is used by The FreeBSD Project with the permission of The FreeBSD Foundation.
This site uses cookies to help personalise content, tailor your experience and to keep you logged in if you register.
By continuing to use this site, you are consenting to our use of cookies.
Accept
Learn more…
Top






================= https://www.freebsd.org/doc/handbook/openssh.html ==================





13.8. OpenSSH13.8. OpenSSHPrev Chapter 13. Security Next13.8. OpenSSHContributed
by Chern Lee. OpenSSH is a set of network
connectivity tools used to provide secure access to remote
machines.
Additionally, TCP/IP connections
can be tunneled or forwarded securely through
SSH connections.
OpenSSH encrypts all traffic to
effectively eliminate eavesdropping, connection hijacking, and
other network-level attacks.OpenSSH is maintained by the
OpenBSD project and is installed by default in FreeBSD.
It is
compatible with both SSH version 1 and 2
protocols.When data is sent over the network in an unencrypted form,
network sniffers anywhere in between the client and server can
steal user/password information or data transferred during the
session.
OpenSSH offers a variety of
authentication and encryption methods to prevent this from
happening.
More information about
OpenSSH is available from http://www.openssh.com/.This section provides an overview of the built-in client
utilities to securely access other systems and securely transfer
files from a FreeBSD system.
It then describes how to configure a
SSH server on a FreeBSD system.
More
information is available in the man pages mentioned in this
chapter.13.8.1. Using the SSH Client UtilitiesTo log into a SSH server, use
ssh and specify a username that exists on
that server and the IP address or hostname
of the server.
If this is the first time a connection has
been made to the specified server, the user will be prompted
to first verify the server's fingerprint:# ssh user@example.com
The authenticity of host 'example.com (10.0.0.1)' can't be established.
ECDSA key fingerprint is 25:cc:73:b5:b3:96:75:3d:56:19:49:d2:5c:1f:91:3b.
Are you sure you want to continue connecting (yes/no)? yes
Permanently added 'example.com' (ECDSA) to the list of known hosts.
Password for user@example.com: user_passwordSSH utilizes a key fingerprint system
to verify the authenticity of the server when the client
connects.
When the user accepts the key's fingerprint by
typing yes when connecting for the first
time, a copy of the key is saved to
.ssh/known_hosts in the user's home
directory.
Future attempts to login are verified against the
saved key and ssh will display an alert if
the server's key does not match the saved key.
If this
occurs, the user should first verify why the key has changed
before continuing with the connection.By default, recent versions of
OpenSSH only accept
SSHv2 connections.
By default, the client
will use version 2 if possible and will fall back to version 1
if the server does not support version 2.
To force
ssh to only use the specified protocol,
include -1 or -2.
Additional options are described in ssh(1).Use scp(1) to securely copy a file to or from a
remote machine.
This example copies
COPYRIGHT on the remote system to a file
of the same name in the current directory of the local
system:# scp user@example.com:/COPYRIGHT COPYRIGHT
Password for user@example.com: *******
COPYRIGHT
100% |*****************************|
4735
00:00
#Since the fingerprint was already verified for this host,
the server's key is automatically checked before prompting for
the user's password.The arguments passed to scp are similar
to cp.
The file or files to copy is the
first argument and the destination to copy to is the second.
Since the file is fetched over the network, one or more of the
file arguments takes the form
user@host:<path_to_remote_file>.
Be
aware when copying directories recursively that
scp uses -r, whereas
cp uses -R.To open an interactive session for copying files, use
sftp.
Refer to sftp(1) for a list of
available commands while in an sftp
session.13.8.1.1. Key-based AuthenticationInstead of using passwords, a client can be configured
to connect to the remote machine using keys.
To generate
RSA
authentication keys, use ssh-keygen.
To
generate a public and private key pair, specify the type of
key and follow the prompts.
It is recommended to protect
the keys with a memorable, but hard to guess
passphrase.% ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/user/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_rsa.
Your public key has been saved in /home/user/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:54Xm9Uvtv6H4NOo6yjP/YCfODryvUU7yWHzMqeXwhq8 user@host.example.com
The key's randomart image is:
+---[RSA 2048]----+
|
|
|
|
|
|
|
. o..
|
|
.S*+*o
|
|
. O=Oo . . |
|
= Oo= oo..|
|
.oB.* +.oo.|
|
=OE**.o..=|
+----[SHA256]-----+ Type a passphrase here.
It can contain spaces and
symbols. Retype the passphrase to verify it.The private key
is stored in ~/.ssh/id_rsa
and the public key
is stored in ~/.ssh/id_rsa.pub.
The
public key must be copied to
~/.ssh/authorized_keys on the remote
machine for key-based authentication to
work.Warning: Many users believe that keys are secure by design and
will use a key without a passphrase.
This is
dangerous behavior.
An
administrator can verify that a key pair is protected by a
passphrase by viewing the private key manually.
If the
private key file contains the word
ENCRYPTED, the key owner is using a
passphrase.
In addition, to better secure end users,
from may be placed in the public key
file.
For example, adding
from="192.168.10.5" in front of the
ssh-rsa
prefix will only allow that specific user to log in from
that IP address.The options and files vary with different versions of
OpenSSH.
To avoid problems, consult ssh-keygen(1).If a passphrase is used, the user is prompted for
the passphrase each time a connection is made to the server.
To load SSH keys into memory and remove
the need to type the passphrase each time, use
ssh-agent(1) and ssh-add(1).Authentication is handled by
ssh-agent, using the private keys that
are loaded into it.
ssh-agent
can be used to launch another application like a
shell or a window manager.To use ssh-agent in a shell, start it
with a shell as an argument.
Add the identity by
running ssh-add and entering the
passphrase for the private key.
The user will then be able to ssh
to any host that has the corresponding public key installed.
For example:% ssh-agent csh
% ssh-add
Enter passphrase for key '/usr/home/user/.ssh/id_rsa':
Identity added: /usr/home/user/.ssh/id_rsa (/usr/home/user/.ssh/id_rsa)
% Enter the passphrase for the key.To use ssh-agent in
Xorg, add an entry for it in
~/.xinitrc.
This provides the
ssh-agent services to all programs
launched in Xorg.
An example
~/.xinitrc might look like this:exec ssh-agent startxfce4This launches ssh-agent, which in
turn launches XFCE, every time
Xorg starts.
Once
Xorg has been restarted so that
the changes can take effect, run ssh-add
to load all of the SSH keys.13.8.1.2. SSH TunnelingOpenSSH has the ability to
create a tunnel to encapsulate another protocol in an
encrypted session.The following command tells ssh to
create a tunnel for
telnet:% ssh -2 -N -f -L 5023:localhost:23 user@foo.example.com
%This example uses the following options:-2Forces ssh to use version 2 to
connect to the server.-NIndicates no command, or tunnel only.
If omitted,
ssh initiates a normal
session.-fForces ssh to run in the
background.-LIndicates a local tunnel in
localport:remotehost:remoteport
format.user@foo.example.comThe login name to use on the specified remote
SSH server.An SSH tunnel works by creating a
listen socket on localhost on the
specified localport.
It then forwards
any connections received on localport via
the SSH connection to the specified
remotehost:remoteport.
In the example,
port 5023 on the client is forwarded to
port 23 on the remote machine.
Since
port 23 is used by telnet, this
creates an encrypted telnet
session through an SSH tunnel.This method can be used to wrap any number of insecure
TCP protocols such as
SMTP, POP3, and
FTP, as seen in the following
examples.Example 13.1. Create a Secure Tunnel for
SMTP% ssh -2 -N -f -L 5025:localhost:25 user@mailserver.example.com
user@mailserver.example.com's password: *****
% telnet localhost 5025
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 mailserver.example.com ESMTPThis can be used in conjunction with
ssh-keygen and additional user accounts
to create a more seamless SSH tunneling
environment.
Keys can be used in place of typing a
password, and the tunnels can be run as a separate
user.Example 13.2. Secure Access of a POP3
ServerIn this example, there is an SSH
server that accepts connections from the outside.
On the
same network resides a mail server running a
POP3 server.
To check email in a
secure manner, create an SSH connection
to the SSH server and tunnel through to
the mail server:% ssh -2 -N -f -L 2110:mail.example.com:110 user@ssh-server.example.com
user@ssh-server.example.com's password: ******Once the tunnel is up and running, point the email
client to send POP3 requests to
localhost on port 2110.
This
connection will be forwarded securely across the tunnel to
mail.example.com.Example 13.3. Bypassing a FirewallSome firewalls
filter both incoming and outgoing connections.
For
example, a firewall might limit access from remote
machines to ports 22 and 80 to only allow
SSH and web surfing.
This prevents
access to any other service which uses a port other than
22 or 80.The solution is to create an SSH
connection to a machine outside of the network's firewall
and use it to tunnel to the desired service:% ssh -2 -N -f -L 8888:music.example.com:8000 user@unfirewalled-system.example.org
user@unfirewalled-system.example.org's password: *******In this example, a streaming Ogg Vorbis client can now
be pointed to localhost port
8888, which will be forwarded over to
music.example.com on port 8000,
successfully bypassing the firewall.13.8.2. Enabling the SSH ServerIn addition to providing built-in SSH
client utilities, a FreeBSD system can be configured as an
SSH server, accepting connections from
other SSH clients.To see if sshd is operating,
use the service(8) command:# service sshd statusIf the service is not running, add the following line to
/etc/rc.conf.sshd_enable="YES"This will start sshd, the
daemon program for OpenSSH, the
next time the system boots.
To start it now:# service sshd startThe first time sshd starts on a
FreeBSD system, the system's host keys will be automatically
created and the fingerprint will be displayed on the console.
Provide users with the fingerprint so that they can verify it
the first time they connect to the server.Refer to sshd(8) for the list of available options
when starting sshd and a more
complete discussion about authentication, the login process,
and the various configuration files.At this point, the sshd should
be available to all users with a username and password on
the system.13.8.3. SSH Server SecurityWhile sshd is the most widely
used remote administration facility for FreeBSD, brute force
and drive by attacks are common to any system exposed to
public networks.
Several additional parameters are available
to prevent the success of these attacks and will be described
in this section.It is a good idea to limit which users can log into the
SSH server and from where using the
AllowUsers keyword in the
OpenSSH server configuration file.
For example, to only allow root to log in from
192.168.1.32, add
this line to /etc/ssh/sshd_config:AllowUsers root@192.168.1.32To allow admin
to log in from anywhere, list that user without specifying an
IP address:AllowUsers adminMultiple users should be listed on the same line, like
so:AllowUsers root@192.168.1.32 adminAfter making changes to
/etc/ssh/sshd_config,
tell sshd to reload its
configuration file by running:# service sshd reloadNote: When this keyword is used, it is important to list each
user that needs to log into this machine.
Any user that is
not specified in that line will be locked out.
Also, the
keywords used in the OpenSSH
server configuration file are case-sensitive.
If the
keyword is not spelled correctly, including its case, it
will be ignored.
Always test changes to this file to make
sure that the edits are working as expected.
Refer to
sshd_config(5) to verify the spelling and use of the
available keywords.In addition, users may be forced to use two factor
authentication via the use of a public and private key.
When
required, the user may generate a key pair through the use
of ssh-keygen(1) and send the administrator the public
key.
This key file will be placed in the
authorized_keys as described above in
the client section.
To force the users to use keys only,
the following option may be configured:AuthenticationMethods publickeyTip: Do not confuse /etc/ssh/sshd_config
with /etc/ssh/ssh_config (note the
extra d in the first filename).
The
first file configures the server and the second file
configures the client.
Refer to ssh_config(5) for a
listing of the available client settings.Prev Up Next13.7. VPN over
IPsec Home 13.9. Access Control ListsAll FreeBSD documents are available for download
at https://download.freebsd.org/ftp/doc/Questions that are not answered by the
documentation may be
sent to <freebsd-questions@FreeBSD.org>.
Send questions about this document to <freebsd-doc@FreeBSD.org>.






================= https://webcache.googleusercontent.com/search?q=cache:plsJxqht1AAJ:https://www.freebsd.org/doc/handbook/openssh.html+&cd=2&hl=en&ct=clnk&gl=pk ==================





This is Google's cache of https://www.freebsd.org/doc/handbook/openssh.html. It is a snapshot of the page as it appeared on 20 Jul 2019 08:20:36 GMT. The current page could have changed in the meantime. Learn more.Full versionText-only versionView sourceTip: To quickly find your search term on this page, press Ctrl+F or ⌘-F (Mac) and use the find bar.
13.8. OpenSSH13.8. OpenSSHPrev Chapter 13. Security Next13.8. OpenSSHContributed
by Chern Lee. OpenSSH is a set of network
connectivity tools used to provide secure access to remote
machines.
Additionally, TCP/IP connections
can be tunneled or forwarded securely through
SSH connections.
OpenSSH encrypts all traffic to
effectively eliminate eavesdropping, connection hijacking, and
other network-level attacks.OpenSSH is maintained by the
OpenBSD project and is installed by default in FreeBSD.
It is
compatible with both SSH version 1 and 2
protocols.When data is sent over the network in an unencrypted form,
network sniffers anywhere in between the client and server can
steal user/password information or data transferred during the
session.
OpenSSH offers a variety of
authentication and encryption methods to prevent this from
happening.
More information about
OpenSSH is available from http://www.openssh.com/.This section provides an overview of the built-in client
utilities to securely access other systems and securely transfer
files from a FreeBSD system.
It then describes how to configure a
SSH server on a FreeBSD system.
More
information is available in the man pages mentioned in this
chapter.13.8.1. Using the SSH Client UtilitiesTo log into a SSH server, use
ssh and specify a username that exists on
that server and the IP address or hostname
of the server.
If this is the first time a connection has
been made to the specified server, the user will be prompted
to first verify the server's fingerprint:# ssh user@example.com
The authenticity of host 'example.com (10.0.0.1)' can't be established.
ECDSA key fingerprint is 25:cc:73:b5:b3:96:75:3d:56:19:49:d2:5c:1f:91:3b.
Are you sure you want to continue connecting (yes/no)? yes
Permanently added 'example.com' (ECDSA) to the list of known hosts.
Password for user@example.com: user_passwordSSH utilizes a key fingerprint system
to verify the authenticity of the server when the client
connects.
When the user accepts the key's fingerprint by
typing yes when connecting for the first
time, a copy of the key is saved to
.ssh/known_hosts in the user's home
directory.
Future attempts to login are verified against the
saved key and ssh will display an alert if
the server's key does not match the saved key.
If this
occurs, the user should first verify why the key has changed
before continuing with the connection.By default, recent versions of
OpenSSH only accept
SSHv2 connections.
By default, the client
will use version 2 if possible and will fall back to version 1
if the server does not support version 2.
To force
ssh to only use the specified protocol,
include -1 or -2.
Additional options are described in ssh(1).Use scp(1) to securely copy a file to or from a
remote machine.
This example copies
COPYRIGHT on the remote system to a file
of the same name in the current directory of the local
system:# scp user@example.com:/COPYRIGHT COPYRIGHT
Password for user@example.com: *******
COPYRIGHT
100% |*****************************|
4735
00:00
#Since the fingerprint was already verified for this host,
the server's key is automatically checked before prompting for
the user's password.The arguments passed to scp are similar
to cp.
The file or files to copy is the
first argument and the destination to copy to is the second.
Since the file is fetched over the network, one or more of the
file arguments takes the form
user@host:<path_to_remote_file>.
Be
aware when copying directories recursively that
scp uses -r, whereas
cp uses -R.To open an interactive session for copying files, use
sftp.
Refer to sftp(1) for a list of
available commands while in an sftp
session.13.8.1.1. Key-based AuthenticationInstead of using passwords, a client can be configured
to connect to the remote machine using keys.
To generate
RSA
authentication keys, use ssh-keygen.
To
generate a public and private key pair, specify the type of
key and follow the prompts.
It is recommended to protect
the keys with a memorable, but hard to guess
passphrase.% ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/user/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_rsa.
Your public key has been saved in /home/user/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:54Xm9Uvtv6H4NOo6yjP/YCfODryvUU7yWHzMqeXwhq8 user@host.example.com
The key's randomart image is:
+---[RSA 2048]----+
|
|
|
|
|
|
|
. o..
|
|
.S*+*o
|
|
. O=Oo . . |
|
= Oo= oo..|
|
.oB.* +.oo.|
|
=OE**.o..=|
+----[SHA256]-----+ Type a passphrase here.
It can contain spaces and
symbols. Retype the passphrase to verify it.The private key
is stored in ~/.ssh/id_rsa
and the public key
is stored in ~/.ssh/id_rsa.pub.
The
public key must be copied to
~/.ssh/authorized_keys on the remote
machine for key-based authentication to
work.Warning: Many users believe that keys are secure by design and
will use a key without a passphrase.
This is
dangerous behavior.
An
administrator can verify that a key pair is protected by a
passphrase by viewing the private key manually.
If the
private key file contains the word
ENCRYPTED, the key owner is using a
passphrase.
In addition, to better secure end users,
from may be placed in the public key
file.
For example, adding
from="192.168.10.5" in front of the
ssh-rsa
prefix will only allow that specific user to log in from
that IP address.The options and files vary with different versions of
OpenSSH.
To avoid problems, consult ssh-keygen(1).If a passphrase is used, the user is prompted for
the passphrase each time a connection is made to the server.
To load SSH keys into memory and remove
the need to type the passphrase each time, use
ssh-agent(1) and ssh-add(1).Authentication is handled by
ssh-agent, using the private keys that
are loaded into it.
ssh-agent
can be used to launch another application like a
shell or a window manager.To use ssh-agent in a shell, start it
with a shell as an argument.
Add the identity by
running ssh-add and entering the
passphrase for the private key.
The user will then be able to ssh
to any host that has the corresponding public key installed.
For example:% ssh-agent csh
% ssh-add
Enter passphrase for key '/usr/home/user/.ssh/id_rsa':
Identity added: /usr/home/user/.ssh/id_rsa (/usr/home/user/.ssh/id_rsa)
% Enter the passphrase for the key.To use ssh-agent in
Xorg, add an entry for it in
~/.xinitrc.
This provides the
ssh-agent services to all programs
launched in Xorg.
An example
~/.xinitrc might look like this:exec ssh-agent startxfce4This launches ssh-agent, which in
turn launches XFCE, every time
Xorg starts.
Once
Xorg has been restarted so that
the changes can take effect, run ssh-add
to load all of the SSH keys.13.8.1.2. SSH TunnelingOpenSSH has the ability to
create a tunnel to encapsulate another protocol in an
encrypted session.The following command tells ssh to
create a tunnel for
telnet:% ssh -2 -N -f -L 5023:localhost:23 user@foo.example.com
%This example uses the following options:-2Forces ssh to use version 2 to
connect to the server.-NIndicates no command, or tunnel only.
If omitted,
ssh initiates a normal
session.-fForces ssh to run in the
background.-LIndicates a local tunnel in
localport:remotehost:remoteport
format.user@foo.example.comThe login name to use on the specified remote
SSH server.An SSH tunnel works by creating a
listen socket on localhost on the
specified localport.
It then forwards
any connections received on localport via
the SSH connection to the specified
remotehost:remoteport.
In the example,
port 5023 on the client is forwarded to
port 23 on the remote machine.
Since
port 23 is used by telnet, this
creates an encrypted telnet
session through an SSH tunnel.This method can be used to wrap any number of insecure
TCP protocols such as
SMTP, POP3, and
FTP, as seen in the following
examples.Example 13.1. Create a Secure Tunnel for
SMTP% ssh -2 -N -f -L 5025:localhost:25 user@mailserver.example.com
user@mailserver.example.com's password: *****
% telnet localhost 5025
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 mailserver.example.com ESMTPThis can be used in conjunction with
ssh-keygen and additional user accounts
to create a more seamless SSH tunneling
environment.
Keys can be used in place of typing a
password, and the tunnels can be run as a separate
user.Example 13.2. Secure Access of a POP3
ServerIn this example, there is an SSH
server that accepts connections from the outside.
On the
same network resides a mail server running a
POP3 server.
To check email in a
secure manner, create an SSH connection
to the SSH server and tunnel through to
the mail server:% ssh -2 -N -f -L 2110:mail.example.com:110 user@ssh-server.example.com
user@ssh-server.example.com's password: ******Once the tunnel is up and running, point the email
client to send POP3 requests to
localhost on port 2110.
This
connection will be forwarded securely across the tunnel to
mail.example.com.Example 13.3. Bypassing a FirewallSome firewalls
filter both incoming and outgoing connections.
For
example, a firewall might limit access from remote
machines to ports 22 and 80 to only allow
SSH and web surfing.
This prevents
access to any other service which uses a port other than
22 or 80.The solution is to create an SSH
connection to a machine outside of the network's firewall
and use it to tunnel to the desired service:% ssh -2 -N -f -L 8888:music.example.com:8000 user@unfirewalled-system.example.org
user@unfirewalled-system.example.org's password: *******In this example, a streaming Ogg Vorbis client can now
be pointed to localhost port
8888, which will be forwarded over to
music.example.com on port 8000,
successfully bypassing the firewall.13.8.2. Enabling the SSH ServerIn addition to providing built-in SSH
client utilities, a FreeBSD system can be configured as an
SSH server, accepting connections from
other SSH clients.To see if sshd is operating,
use the service(8) command:# service sshd statusIf the service is not running, add the following line to
/etc/rc.conf.sshd_enable="YES"This will start sshd, the
daemon program for OpenSSH, the
next time the system boots.
To start it now:# service sshd startThe first time sshd starts on a
FreeBSD system, the system's host keys will be automatically
created and the fingerprint will be displayed on the console.
Provide users with the fingerprint so that they can verify it
the first time they connect to the server.Refer to sshd(8) for the list of available options
when starting sshd and a more
complete discussion about authentication, the login process,
and the various configuration files.At this point, the sshd should
be available to all users with a username and password on
the system.13.8.3. SSH Server SecurityWhile sshd is the most widely
used remote administration facility for FreeBSD, brute force
and drive by attacks are common to any system exposed to
public networks.
Several additional parameters are available
to prevent the success of these attacks and will be described
in this section.It is a good idea to limit which users can log into the
SSH server and from where using the
AllowUsers keyword in the
OpenSSH server configuration file.
For example, to only allow root to log in from
192.168.1.32, add
this line to /etc/ssh/sshd_config:AllowUsers root@192.168.1.32To allow admin
to log in from anywhere, list that user without specifying an
IP address:AllowUsers adminMultiple users should be listed on the same line, like
so:AllowUsers root@192.168.1.32 adminAfter making changes to
/etc/ssh/sshd_config,
tell sshd to reload its
configuration file by running:# service sshd reloadNote: When this keyword is used, it is important to list each
user that needs to log into this machine.
Any user that is
not specified in that line will be locked out.
Also, the
keywords used in the OpenSSH
server configuration file are case-sensitive.
If the
keyword is not spelled correctly, including its case, it
will be ignored.
Always test changes to this file to make
sure that the edits are working as expected.
Refer to
sshd_config(5) to verify the spelling and use of the
available keywords.In addition, users may be forced to use two factor
authentication via the use of a public and private key.
When
required, the user may generate a key pair through the use
of ssh-keygen(1) and send the administrator the public
key.
This key file will be placed in the
authorized_keys as described above in
the client section.
To force the users to use keys only,
the following option may be configured:AuthenticationMethods publickeyTip: Do not confuse /etc/ssh/sshd_config
with /etc/ssh/ssh_config (note the
extra d in the first filename).
The
first file configures the server and the second file
configures the client.
Refer to ssh_config(5) for a
listing of the available client settings.Prev Up Next13.7. VPN over
IPsec Home 13.9. Access Control ListsAll FreeBSD documents are available for download
at https://download.freebsd.org/ftp/doc/Questions that are not answered by the
documentation may be
sent to <freebsd-questions@FreeBSD.org>.
Send questions about this document to <freebsd-doc@FreeBSD.org>.






================= https://bugs.freebsd.org/bugzilla/attachment.cgi?bugid=234793&action=viewall ==================





View All Attachments for Bug 234793
FreeBSD Bugzilla – View All Attachments for
Bug 234793
Home
| New
| Browse
| Search
|
[?]
| Reports
|
New Account
|
Log In
Remember
[x]
|
Forgot Password
Login:
[x]
Attachment #201093
client-ssh-verbose.md
text/plain
2019-01-13 10:47:11 UTC
12.00 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201094
server--auth.log
text/plain
2019-01-13 10:48:23 UTC
1.38 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201095
server--sshd_config
text/plain
2019-01-13 10:49:12 UTC
3.91 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201466
Auth.log, sshd_config and level 3 debug of client
text/plain
2019-01-27 23:07:29 UTC
14.09 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201758
sshd debug
text/plain
2019-02-05 12:49:47 UTC
19.58 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Home
| New
| Browse
| Search
|
[?]
| Reports
|
New Account
|
Log In
Remember
[x]
|
Forgot Password
Login:
[x]






================= https://webcache.googleusercontent.com/search?q=cache:GE2JqAmgasQJ:https://bugs.freebsd.org/bugzilla/attachment.cgi%3Fbugid%3D234793%26action%3Dviewall+&cd=3&hl=en&ct=clnk&gl=pk ==================





This is Google's cache of https://bugs.freebsd.org/bugzilla/attachment.cgi?bugid=234793&action=viewall. It is a snapshot of the page as it appeared on 24 May 2019 15:39:11 GMT. The current page could have changed in the meantime. Learn more.Full versionText-only versionView sourceTip: To quickly find your search term on this page, press Ctrl+F or ⌘-F (Mac) and use the find bar.
View All Attachments for Bug 234793
FreeBSD Bugzilla – View All Attachments for
Bug 234793
Home
| New
| Browse
| Search
|
[?]
| Reports
|
New Account
|
Log In
Remember
[x]
|
Forgot Password
Login:
[x]
Attachment #201093
client-ssh-verbose.md
text/plain
2019-01-13 10:47:11 UTC
12.00 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201094
server--auth.log
text/plain
2019-01-13 10:48:23 UTC
1.38 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201095
server--sshd_config
text/plain
2019-01-13 10:49:12 UTC
3.91 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201466
Auth.log, sshd_config and level 3 debug of client
text/plain
2019-01-27 23:07:29 UTC
14.09 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Attachment #201758
sshd debug
text/plain
2019-02-05 12:49:47 UTC
19.58 KB
no flags
Details
You cannot view the attachment on this page because your browser does not support IFRAMEs.
View the attachment on a separate page.
Home
| New
| Browse
| Search
|
[?]
| Reports
|
New Account
|
Log In
Remember
[x]
|
Forgot Password
Login:
[x]






================= https://forums.freebsd.org/threads/cant-ssh-after-upgrading-to-11-2.66617/ ==================





Solved - Can't ssh after Upgrading to 11.2 | The FreeBSD Forums
.
Donate to FreeBSD
.
Home
About
Introduction
Features
Advocacy
Marketing
Privacy Policy
Get FreeBSD
Release Information
Release Engineering
Documentation
FAQ
Handbook
Porter's Handbook
Developer's Handbook
Manual Pages
Documentation Project Primer
All Books and Articles
Community
Mailing Lists
Forums
User Groups
Events
Q&A (external)
Developers
Project Ideas
SVN Repository
Perforce Repository
Support
Vendors
Security Information
Bug Reports
Submit Bug-report
Foundation
Monetary Donations
Hardware Donations
Menu
Forums
New posts
Search forums
What's new
New posts
Latest activity
Log in
Register
What's new
Search
Search
Everywhere
Threads
This forum
This thread
Search titles only
By:
Search
Advanced search…
New posts
Search forums
Menu
Log in
Register
Forums
Base System
Installing and Upgrading FreeBSD
JavaScript is disabled. For a better experience, please enable JavaScript in your browser before proceeding.
Solved Can't ssh after Upgrading to 11.2
Thread starter
Lamia
Start date
Jul 8, 2018
Tags
ssh
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#1
I have been keeping an eye on issues pertaining to 11.2 on this platform for the past four days. I, like many others, just upgraded my box [from FBSD 11.1-RELEASE-p9] to 11.2. And I ran a few other commands like portmaster -a, pkg upgrade and so on after the upgrade. After restarting the PC, I could not log in. I noticed 11.2 making changes to sshd_config and /etc/ttys [during the upgrade] and I have double checked to make sure the changes cause no problem.
Openssh-portable has been explored and it is now enabled with sshd in my rc.conf. I cannot login from a remote client neither can I ssh 'root@locallhost' on the machine. And for the openssh-portable, it [or any ssh service] does not run in the background/deamon [visible in ps aux] when it is enabled in rc.conf. Hence, I needed to enable it and sshd too though I noticed its service [crypto/openssh] could be restarted.
At the moment, I see 'portmaster -a' hanging at 2000/4388 when building llvm60. But ignoring that
(with -x), all installed system ports/pkgs are up-to-date.
SSH terminates at "ssh_exchange_identification: Connection closed by remote host". I have attempted all possible suggestions on the Internet to fix it with no luck.
Code:
debug1: key_load_public: No such file or directory
debug1: identity file /home/xbox/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/xbox/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.2 FreeBSD-06102017
I read that there was a bug in that version of OpenSSH but a FBSD box that is running a current release or so already has it fixed in its base. That line 'Local version....' was copied from a Linux box. I couldn't easily fetch the exact line from sshing into localhost in the FBSD itself but I am sure it was that version with no 'p2 or so' indicating a patch.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#2
I have also checked sshguard-pf. All other services seem to be fine but not sshd. And from what it worth, this is a problem with sshd & it dependencies. This problem is re-described here in the FreeBSD Diary. While I cannot easily copy the sshd library from another machine, could there be another way around it?
T
tingo
Daemon
Reaction score: 387
Messages: 2,016
Jul 8, 2018
#3
So, have you run
ldd on sshd yet?
ILUXA
Aspiring Daemon
Reaction score: 434
Messages: 679
Jul 8, 2018
#4
Seems 11.2 is not very successful release, because, it seems, there are
some issues with it, I also had problems with it, I couldn't boot after upgrading to 11.2,
but after switching to old kernel version (11.1) via boot menu it booted fine,
without any issues, personally I refrain to update to 11.2, at least for now.
EDIT: Problem solved, see https://forums.freebsd.org/threads/freebsd-update-to-11-2-release-fails-to-boot-reboots.66431/#post-394308
Last edited: Jul 12, 2018
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#5
tingo said:
So, have you run
ldd on sshd yet?
Click to expand...
Yes, I did awhile back. Thanks tingo.
Please see below.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#6
ILUXA said:
Seems 11.2 is not very successful release, because, it seems, there are
some issues with it, I also had problems with it, I couldn't boot after upgrading
to 11.2, because my zfs pool didn't mount, it showed zfs related error
and rebooted, but after switching to old kernel version (11.1) via boot menu
it booted fine, without any issues, personally I refrain to update to 11.2,
at least for now.
Click to expand...
You reminded on of Celine Dion - 'if I could turn back the hands of time'.
I noticed that we are advised against a rollback. Sadly, switching to the old kernel won't help me in this case. It didn't!
Damn it,
I have been on this
matter for over three days .
ShelLuser
Son of Beastie
Reaction score: 1,719
Messages: 3,539
Jul 8, 2018
#7
So I take it you build SSH from ports instead of installing it as a package? If it continues to fail then this might be caused by one of its dependencies. What I usually do when a port fails on me is to rebuild the port and its direct dependencies to see if that can solve the problem.
# portmaster `prdeps`, where prdeps is a small script I made which checks a ports run dependencies. I also have pbdeps which is used to check building dependencies...
Code:
#!/bin/sh
make run-depends-list | sed -e 's/\/usr\/ports\///g'
I often prefer this method instead of
# portmaster -f because that recurses through all dependencies of all ports and rebuilds the whole lot. This is a little less intrusive and usually gets the job done.
Either way; considering how the problem seems to be focused on the encryption part you might want to verify security/openssl as well.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#8
ShelLuser said:
I also have pbdeps which is used to check building dependencies...
Click to expand...
Many thanks ShellLuser, please share your pbdeps script too. In the meantime, I would want to explore the above prdeps.
If you meant that I installed openssh via ports, yes. I know that sshd is part of the base; so I would not have installed it via ports/pkgs management. I also installed openssh-portable via ports, just like I did for the latest version of openssl. I may try installing them via 'pkg install' now.
My interaction with the machine is now very limited since I can't ssh. I am currently accessing it via the QEMU [virtual/serial] terminal. I can't even cut & paste into it. I can only type few characters. And the fingerprint notifications drive me nut. I have tried suppressing them following suggestions like this but no luck. That is an issue for another day. Until then, I need get access back to the machine via SSH ASAP.
ShelLuser
Son of Beastie
Reaction score: 1,719
Messages: 3,539
Jul 8, 2018
#9
Right, then I misunderstood a few things, I thought you were already using the ports version.
First thing to do is to rule out possible problems in your configuration. Maybe try
# sshd -T | less to see if that shows anything unusual (probably not).
Then stop the service, make sure no other instances are running, and then on the console which you have use
# sshd -d. Check what the outpost is telling you, then try to connect and pay close attention to the messages on the server side.
Worst case scenario...
move /etc/ssh/sshd_config out of the way and replace it with a vanilla version. If you have the sourcecode installed you should be able to find this in /usr/src/crypto/openssh/sshd_config. Enable only the specific options which you need and then see if you can fire up sshd.
Reactions:
Lamia
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#10
ShelLuser said:
Then stop the service, make sure no other instances are running, and then on the console which you have use
# sshd -d. Check what the outpost is telling you, then try to connect and pay close attention to the messages on the server side.
Click to expand...
I am getting closer to fixing it. Thanks a million. The problem is an undefined symbol - 'Fssh_get_remote_port'. Someone's box had the same problem here.
My challenge now is how to buildworld in a machine that I have a restricted access to. This is not about the terminal or so. I have tried to build FreeBSD from src on it in the past with no luck.
It is more or less a VM. I need a compiled sshd library to get over this matter once and for all.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 8, 2018
#11
Building world going fine... At least, I have not made changes necessary for to a custom kernel. Pretty minimalistic for now.
ShelLuser
Son of Beastie
Reaction score: 1,719
Messages: 3,539
Jul 8, 2018
#12
(re)building the world should help, but why not focus on the port for now? If that builds you might be able to do the step with the
sshd -d option and see what that tells you. Thing is; (re)building a port is much faster than rebuilding the world.
Even so; I wouldn't interrupt the process if it's already running, that'd be a shame. But if that process somehow fails then I would definitely recommend focusing on the port for now, trying to get it running manually with debug output.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 9, 2018
#13
ShelLuser said:
(re)building the world should help, but why not focus on the port for now? If that builds you might be able to do the step with the
sshd -d option and see what that tells you. Thing is; (re)building a port is much faster than rebuilding the world.
Click to expand...
SSH, which shows the undefined symbol, has never been a port but part of the base.
The openssh-portable and openssl mentioned above produce no error. What port are you referring to?
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 9, 2018
#14
"make -j4 buildworld" error:
"make -j4 kernel" error:
I got the src files from - ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/11.2-RELEASE/src.txz - and ran the above command.
To make matter worse, I got the "sshd" executable from another FBSD (11.1-RELEASE-p9) and replaced the one on the VM with it but the "Fssh_get_remote_port" undefined symbol error resurfaced.
@ShellLuser: you mind shedding more light on the prdeps and pbdeps? An How-to will be appreciated. I have tried running the script with portmaster but it threw an error - obviously, it's not a Makefile.
Are there other recommendations from the community - e.g. a fix for the above build src, the right port/pkg to build for ssh, etc?
T
trev
Aspiring Daemon
Reaction score: 157
Messages: 770
Jul 9, 2018
#15
Code:
FreeBSD sentinel.sentry.org 11.1-RELEASE-p10 FreeBSD 11.1-RELEASE-p10 #2 r333388: Wed May
9 12:43:41 AEST 2018
xxxx@newyork:/usr/obj/usr/src/sys/VULT_11.1
amd64
root@sentinel [/usr/lib] $ grep -i Fssh_get_remote_port *
Binary file libprivatessh.a matches
Binary file libprivatessh.so matches
Binary file libprivatessh.so.5 matches
Binary file libprivatessh_p.a matches
1. Do you have this library?
2. Can you try rebuilding this library?
ShelLuser
Son of Beastie
Reaction score: 1,719
Messages: 3,539
Jul 9, 2018
#16
Lamia said:
The openssh-portable and openssl mentioned above produce no error.
Click to expand...
So why not use those for the time being? At least to gain better access to your system.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 9, 2018
#17
ShelLuser said:
So why not use those for the time being? At least to gain better access to your system.
Click to expand...
I did as mentioned above; but they won't help. I still need to enable sshd in rc.conf to connect; so, I get returned to the same error.
I have now successfully built 11.1-RELEASE kernel & world on a local machine with 11.1-RELEASE-p9 running on it. I wonder why 11.2 kernel & world won't successfully build on a machine recently upgraded to 11.2-RELEASE.
As things stand, I am now recompiling all the ports with "portmaster -af". I noticed a few ports proofing difficult - one of them was curl-7.6.x.
I had to choose the option 'no gssapi support' after it failed with the gssapi_base and gssapi_mit on separate occasions. That required me removing OpenSSL so that curl could install the best-fit version of it.
trev: Thank you for your input. I am now watching that library.
/me: I am happy helping the community test the 11.2-RELEASE even though it has taken the better part of a whole week from me.
ShelLuser
Son of Beastie
Reaction score: 1,719
Messages: 3,539
Jul 9, 2018
#18
Lamia said:
I did as mentioned above; but they won't help. I still need to enable sshd in rc.conf to connect; so, I get returned to the same error.
Click to expand...
So what happens if you try to start the binary manually? As I mentioned earlier:
# sshd -d?
(of course now referring to the binary which got installed with the port). I wouldn't bother with all the ports right now but only focus on sshd so that you can get easier access asap.
Oh, by the way, I overlooked your earlier question...
There's nothing special about my pbdeps script, it does nearly the exact same thing only using a different build target:
make build-depends-list. See also ports(7).
These can often help to rule out weird behavior with ports yet without having to rebuild all their dependencies, only a specific few. Of course its not a full proof solution.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,558
Messages: 30,277
Jul 9, 2018
#19
Note that /usr/bin/ and /usr/sbin are on the path before /usr/local/bin and /usr/local/sbin. So a "plain"
sshd or
ssh will use the one from /usr/sbin/sshd and /usr/bin/ssh.
Reactions:
ShelLuser
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 18, 2018
#20
My sincere appreciation to everyone that advised me on this thread. How else can I describe the problem and its likely cause than to say the FreeBSD 11.1-RELEASE-p11 binaries conflicted with FreeBSD 11.2-RELEASE's.
While I successfully ran
freebsd-update upgrade -r 11.2-RELEASE, the command
freebsd-version -k gave 11.1-RELEASE-p11. I noticed it and, on several times, tried running
freebsd-update upgrade... and
freebsd-update fetch install
again and again. It was actually after the upgrade & restarting of the machine that I got locked out.
In addition, I tried building FreeBSD from source and updating ports/pkgs on several occasions
but no luck. It was during this time I noticed binaries were conflicting one another particularly OpenSSL related ports/pkgs. My last resort was to re-install the OS.
Thanks to the community.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,558
Messages: 30,277
Jul 18, 2018
#21
Lamia said:
While I successfully ran
freebsd-update upgrade -r 11.2-RELEASE, the command
freebsd-version -k gave 11.1-RELEASE-p11.
Click to expand...
The
freebsd-update upgrade command only downloads the files required for the upgrade. You will need to run
freebsd-update install to actually install the upgrade.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 18, 2018
#22
SirDice said:
The
freebsd-update upgrade command only downloads the files required for the upgrade. You will need to run
freebsd-update install to actually install the upgrade.
Click to expand...
What would have happened on a machine that had 11.1-RELEASE-p9 if one ran freebsd-update upgrade -r 11.2 followed by freebsd-update fetch and lastly freebsd-update install? Of course, one would have restarted the machine in between the commands.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,558
Messages: 30,277
Jul 18, 2018
#23
Lamia said:
What would have happened on a machine that had 11.1-RELEASE-p9 if one ran freebsd-update upgrade -r 11.2 followed by freebsd-update fetch and lastly freebsd-update install?
Click to expand...
It would be updated to 11.1-RELEASE-p11. The
freebsd-update fetch pretty much undid everything and simply fetched updates for your currently installed version.
OP
OP
Lamia
Well-Known Member
Reaction score: 48
Messages: 288
Jul 18, 2018
#24
SirDice said:
It would be updated to 11.1-RELEASE-p11. The
freebsd-update fetch pretty much undid everything and simply fetched updates for your currently installed version.
Click to expand...
That explains why
freebsd-version -k shows 11.1-RELEASE-p11. But the top comment in /etc/sshd_config shows 11.2. I was presented with a vi editor interface to approve changes in it. And the same goes for /etc/ttys.
All the time I was checking them, they had 11.2. Undoubtedly, the failure to build a bunch of packages/ports, particularly the reports on investigating the failures, the FreeBSD source and the above mentioned changes in version point to conflicts in the binaries.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,558
Messages: 30,277
Jul 18, 2018
#25
Well, running
freebsd-update fetch pretty much threw a spanner in the works, you really shouldn't have done that.
In order to get things correct again I would start with
rm -rf /var/db/freebsd-update/*. So you have a clean slate to start from. Then
freebsd-update -r 11.2-RELEASE --currently-running
11.1-RELEASE-p9 upgrade. Then
freebsd-update install and follow directions. Do NOT run
freebsd-update fetch until after you have finished the ENTIRE upgrade process.
Reactions:
nik0tine and Lamia
You must log in or register to reply here.
Share:
Reddit
Pinterest
Tumblr
WhatsApp
Email
Link
Forums
Base System
Installing and Upgrading FreeBSD
FreeBSD Style
Contact us
Terms and rules
Privacy policy
Help
RSS
Forum software by XenForo® © 2010-2019 XenForo Ltd.
The mark FreeBSD is a registered trademark of The FreeBSD Foundation and is used by The FreeBSD Project with the permission of The FreeBSD Foundation.
This site uses cookies to help personalise content, tailor your experience and to keep you logged in if you register.
By continuing to use this site, you are consenting to our use of cookies.
Accept
Learn more…
Top






================= https://webcache.googleusercontent.com/search?q=cache:c1KVxMSZnEQJ:https://forums.freebsd.org/threads/cant-ssh-after-upgrading-to-11-2.66617/+&cd=4&hl=en&ct=clnk&gl=pk ==================





This is Google's cache of https://forums.freebsd.org/threads/cant-ssh-after-upgrading-to-11-2.66617/. It is a snapshot of the page as it appeared on 15 Jul 2019 04:26:02 GMT. The current page could have changed in the meantime. Learn more.Full versionText-only versionView sourceTip: To quickly find your search term on this page, press Ctrl+F or ⌘-F (Mac) and use the find bar.
Solved - Can't ssh after Upgrading to 11.2 | The FreeBSD Forums
.
Donate to FreeBSD
.
Home
About
Introduction
Features
Advocacy
Marketing
Privacy Policy
Get FreeBSD
Release Information
Release Engineering
Documentation
FAQ
Handbook
Porter's Handbook
Developer's Handbook
Manual Pages
Documentation Project Primer
All Books and Articles
Community
Mailing Lists
Forums
User Groups
Events
Q&A (external)
Developers
Project Ideas
SVN Repository
Perforce Repository
Support
Vendors
Security Information
Bug Reports
Submit Bug-report
Foundation
Monetary Donations
Hardware Donations
Menu
Forums
New posts
Search forums
What's new
New posts
Latest activity
Log in
Register
What's new
Search
Search
Everywhere
Threads
This forum
This thread
Search titles only
By:
Search
Advanced search…
New posts
Search forums
Menu
Log in
Register
Forums
Base System
Installing and Upgrading FreeBSD
JavaScript is disabled. For a better experience, please enable JavaScript in your browser before proceeding.
Solved Can't ssh after Upgrading to 11.2
Thread starter
Lamia
Start date
Jul 8, 2018
Tags
ssh
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#1
I have been keeping an eye on issues pertaining to 11.2 on this platform for the past four days. I, like many others, just upgraded my box [from FBSD 11.1-RELEASE-p9] to 11.2. And I ran a few other commands like portmaster -a, pkg upgrade and so on after the upgrade. After restarting the PC, I could not log in. I noticed 11.2 making changes to sshd_config and /etc/ttys [during the upgrade] and I have double checked to make sure the changes cause no problem.
Openssh-portable has been explored and it is now enabled with sshd in my rc.conf. I cannot login from a remote client neither can I ssh 'root@locallhost' on the machine. And for the openssh-portable, it [or any ssh service] does not run in the background/deamon [visible in ps aux] when it is enabled in rc.conf. Hence, I needed to enable it and sshd too though I noticed its service [crypto/openssh] could be restarted.
At the moment, I see 'portmaster -a' hanging at 2000/4388 when building llvm60. But ignoring that
(with -x), all installed system ports/pkgs are up-to-date.
SSH terminates at "ssh_exchange_identification: Connection closed by remote host". I have attempted all possible suggestions on the Internet to fix it with no luck.
Code:
debug1: key_load_public: No such file or directory
debug1: identity file /home/xbox/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/xbox/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.2 FreeBSD-06102017
I read that there was a bug in that version of OpenSSH but a FBSD box that is running a current release or so already has it fixed in its base. That line 'Local version....' was copied from a Linux box. I couldn't easily fetch the exact line from sshing into localhost in the FBSD itself but I am sure it was that version with no 'p2 or so' indicating a patch.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#2
I have also checked sshguard-pf. All other services seem to be fine but not sshd. And from what it worth, this is a problem with sshd & it dependencies. This problem is re-described here in the FreeBSD Diary. While I cannot easily copy the sshd library from another machine, could there be another way around it?
T
tingo
Daemon
Reaction score: 387
Messages: 2,012
Jul 8, 2018
#3
So, have you run
ldd on sshd yet?
ILUXA
Aspiring Daemon
Reaction score: 434
Messages: 678
Jul 8, 2018
#4
Seems 11.2 is not very successful release, because, it seems, there are
some issues with it, I also had problems with it, I couldn't boot after upgrading to 11.2,
but after switching to old kernel version (11.1) via boot menu it booted fine,
without any issues, personally I refrain to update to 11.2, at least for now.
EDIT: Problem solved, see https://forums.freebsd.org/threads/freebsd-update-to-11-2-release-fails-to-boot-reboots.66431/#post-394308
Last edited: Jul 12, 2018
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#5
tingo said:
So, have you run
ldd on sshd yet?
Click to expand...
Yes, I did awhile back. Thanks tingo.
Please see below.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#6
ILUXA said:
Seems 11.2 is not very successful release, because, it seems, there are
some issues with it, I also had problems with it, I couldn't boot after upgrading
to 11.2, because my zfs pool didn't mount, it showed zfs related error
and rebooted, but after switching to old kernel version (11.1) via boot menu
it booted fine, without any issues, personally I refrain to update to 11.2,
at least for now.
Click to expand...
You reminded on of Celine Dion - 'if I could turn back the hands of time'.
I noticed that we are advised against a rollback. Sadly, switching to the old kernel won't help me in this case. It didn't!
Damn it,
I have been on this
matter for over three days .
ShelLuser
Son of Beastie
Reaction score: 1,718
Messages: 3,537
Jul 8, 2018
#7
So I take it you build SSH from ports instead of installing it as a package? If it continues to fail then this might be caused by one of its dependencies. What I usually do when a port fails on me is to rebuild the port and its direct dependencies to see if that can solve the problem.
# portmaster `prdeps`, where prdeps is a small script I made which checks a ports run dependencies. I also have pbdeps which is used to check building dependencies...
Code:
#!/bin/sh
make run-depends-list | sed -e 's/\/usr\/ports\///g'
I often prefer this method instead of
# portmaster -f because that recurses through all dependencies of all ports and rebuilds the whole lot. This is a little less intrusive and usually gets the job done.
Either way; considering how the problem seems to be focused on the encryption part you might want to verify security/openssl as well.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#8
ShelLuser said:
I also have pbdeps which is used to check building dependencies...
Click to expand...
Many thanks ShellLuser, please share your pbdeps script too. In the meantime, I would want to explore the above prdeps.
If you meant that I installed openssh via ports, yes. I know that sshd is part of the base; so I would not have installed it via ports/pkgs management. I also installed openssh-portable via ports, just like I did for the latest version of openssl. I may try installing them via 'pkg install' now.
My interaction with the machine is now very limited since I can't ssh. I am currently accessing it via the QEMU [virtual/serial] terminal. I can't even cut & paste into it. I can only type few characters. And the fingerprint notifications drive me nut. I have tried suppressing them following suggestions like this but no luck. That is an issue for another day. Until then, I need get access back to the machine via SSH ASAP.
ShelLuser
Son of Beastie
Reaction score: 1,718
Messages: 3,537
Jul 8, 2018
#9
Right, then I misunderstood a few things, I thought you were already using the ports version.
First thing to do is to rule out possible problems in your configuration. Maybe try
# sshd -T | less to see if that shows anything unusual (probably not).
Then stop the service, make sure no other instances are running, and then on the console which you have use
# sshd -d. Check what the outpost is telling you, then try to connect and pay close attention to the messages on the server side.
Worst case scenario...
move /etc/ssh/sshd_config out of the way and replace it with a vanilla version. If you have the sourcecode installed you should be able to find this in /usr/src/crypto/openssh/sshd_config. Enable only the specific options which you need and then see if you can fire up sshd.
Reactions:
Lamia
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#10
ShelLuser said:
Then stop the service, make sure no other instances are running, and then on the console which you have use
# sshd -d. Check what the outpost is telling you, then try to connect and pay close attention to the messages on the server side.
Click to expand...
I am getting closer to fixing it. Thanks a million. The problem is an undefined symbol - 'Fssh_get_remote_port'. Someone's box had the same problem here.
My challenge now is how to buildworld in a machine that I have a restricted access to. This is not about the terminal or so. I have tried to build FreeBSD from src on it in the past with no luck.
It is more or less a VM. I need a compiled sshd library to get over this matter once and for all.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 8, 2018
#11
Building world going fine... At least, I have not made changes necessary for to a custom kernel. Pretty minimalistic for now.
ShelLuser
Son of Beastie
Reaction score: 1,718
Messages: 3,537
Jul 8, 2018
#12
(re)building the world should help, but why not focus on the port for now? If that builds you might be able to do the step with the
sshd -d option and see what that tells you. Thing is; (re)building a port is much faster than rebuilding the world.
Even so; I wouldn't interrupt the process if it's already running, that'd be a shame. But if that process somehow fails then I would definitely recommend focusing on the port for now, trying to get it running manually with debug output.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 9, 2018
#13
ShelLuser said:
(re)building the world should help, but why not focus on the port for now? If that builds you might be able to do the step with the
sshd -d option and see what that tells you. Thing is; (re)building a port is much faster than rebuilding the world.
Click to expand...
SSH, which shows the undefined symbol, has never been a port but part of the base.
The openssh-portable and openssl mentioned above produce no error. What port are you referring to?
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 9, 2018
#14
"make -j4 buildworld" error:
"make -j4 kernel" error:
I got the src files from - ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/11.2-RELEASE/src.txz - and ran the above command.
To make matter worse, I got the "sshd" executable from another FBSD (11.1-RELEASE-p9) and replaced the one on the VM with it but the "Fssh_get_remote_port" undefined symbol error resurfaced.
@ShellLuser: you mind shedding more light on the prdeps and pbdeps? An How-to will be appreciated. I have tried running the script with portmaster but it threw an error - obviously, it's not a Makefile.
Are there other recommendations from the community - e.g. a fix for the above build src, the right port/pkg to build for ssh, etc?
T
trev
Aspiring Daemon
Reaction score: 152
Messages: 762
Jul 9, 2018
#15
Code:
FreeBSD sentinel.sentry.org 11.1-RELEASE-p10 FreeBSD 11.1-RELEASE-p10 #2 r333388: Wed May
9 12:43:41 AEST 2018
xxxx@newyork:/usr/obj/usr/src/sys/VULT_11.1
amd64
root@sentinel [/usr/lib] $ grep -i Fssh_get_remote_port *
Binary file libprivatessh.a matches
Binary file libprivatessh.so matches
Binary file libprivatessh.so.5 matches
Binary file libprivatessh_p.a matches
1. Do you have this library?
2. Can you try rebuilding this library?
ShelLuser
Son of Beastie
Reaction score: 1,718
Messages: 3,537
Jul 9, 2018
#16
Lamia said:
The openssh-portable and openssl mentioned above produce no error.
Click to expand...
So why not use those for the time being? At least to gain better access to your system.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 9, 2018
#17
ShelLuser said:
So why not use those for the time being? At least to gain better access to your system.
Click to expand...
I did as mentioned above; but they won't help. I still need to enable sshd in rc.conf to connect; so, I get returned to the same error.
I have now successfully built 11.1-RELEASE kernel & world on a local machine with 11.1-RELEASE-p9 running on it. I wonder why 11.2 kernel & world won't successfully build on a machine recently upgraded to 11.2-RELEASE.
As things stand, I am now recompiling all the ports with "portmaster -af". I noticed a few ports proofing difficult - one of them was curl-7.6.x.
I had to choose the option 'no gssapi support' after it failed with the gssapi_base and gssapi_mit on separate occasions. That required me removing OpenSSL so that curl could install the best-fit version of it.
trev: Thank you for your input. I am now watching that library.
/me: I am happy helping the community test the 11.2-RELEASE even though it has taken the better part of a whole week from me.
ShelLuser
Son of Beastie
Reaction score: 1,718
Messages: 3,537
Jul 9, 2018
#18
Lamia said:
I did as mentioned above; but they won't help. I still need to enable sshd in rc.conf to connect; so, I get returned to the same error.
Click to expand...
So what happens if you try to start the binary manually? As I mentioned earlier:
# sshd -d?
(of course now referring to the binary which got installed with the port). I wouldn't bother with all the ports right now but only focus on sshd so that you can get easier access asap.
Oh, by the way, I overlooked your earlier question...
There's nothing special about my pbdeps script, it does nearly the exact same thing only using a different build target:
make build-depends-list. See also ports(7).
These can often help to rule out weird behavior with ports yet without having to rebuild all their dependencies, only a specific few. Of course its not a full proof solution.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,495
Messages: 30,157
Jul 9, 2018
#19
Note that /usr/bin/ and /usr/sbin are on the path before /usr/local/bin and /usr/local/sbin. So a "plain"
sshd or
ssh will use the one from /usr/sbin/sshd and /usr/bin/ssh.
Reactions:
ShelLuser
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 18, 2018
#20
My sincere appreciation to everyone that advised me on this thread. How else can I describe the problem and its likely cause than to say the FreeBSD 11.1-RELEASE-p11 binaries conflicted with FreeBSD 11.2-RELEASE's.
While I successfully ran
freebsd-update upgrade -r 11.2-RELEASE, the command
freebsd-version -k gave 11.1-RELEASE-p11. I noticed it and, on several times, tried running
freebsd-update upgrade... and
freebsd-update fetch install
again and again. It was actually after the upgrade & restarting of the machine that I got locked out.
In addition, I tried building FreeBSD from source and updating ports/pkgs on several occasions
but no luck. It was during this time I noticed binaries were conflicting one another particularly OpenSSL related ports/pkgs. My last resort was to re-install the OS.
Thanks to the community.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,495
Messages: 30,157
Jul 18, 2018
#21
Lamia said:
While I successfully ran
freebsd-update upgrade -r 11.2-RELEASE, the command
freebsd-version -k gave 11.1-RELEASE-p11.
Click to expand...
The
freebsd-update upgrade command only downloads the files required for the upgrade. You will need to run
freebsd-update install to actually install the upgrade.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 18, 2018
#22
SirDice said:
The
freebsd-update upgrade command only downloads the files required for the upgrade. You will need to run
freebsd-update install to actually install the upgrade.
Click to expand...
What would have happened on a machine that had 11.1-RELEASE-p9 if one ran freebsd-update upgrade -r 11.2 followed by freebsd-update fetch and lastly freebsd-update install? Of course, one would have restarted the machine in between the commands.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,495
Messages: 30,157
Jul 18, 2018
#23
Lamia said:
What would have happened on a machine that had 11.1-RELEASE-p9 if one ran freebsd-update upgrade -r 11.2 followed by freebsd-update fetch and lastly freebsd-update install?
Click to expand...
It would be updated to 11.1-RELEASE-p11. The
freebsd-update fetch pretty much undid everything and simply fetched updates for your currently installed version.
OP
OP
Lamia
Well-Known Member
Reaction score: 47
Messages: 276
Jul 18, 2018
#24
SirDice said:
It would be updated to 11.1-RELEASE-p11. The
freebsd-update fetch pretty much undid everything and simply fetched updates for your currently installed version.
Click to expand...
That explains why
freebsd-version -k shows 11.1-RELEASE-p11. But the top comment in /etc/sshd_config shows 11.2. I was presented with a vi editor interface to approve changes in it. And the same goes for /etc/ttys.
All the time I was checking them, they had 11.2. Undoubtedly, the failure to build a bunch of packages/ports, particularly the reports on investigating the failures, the FreeBSD source and the above mentioned changes in version point to conflicts in the binaries.
SirDice
Administrator
Staff member
Administrator
Moderator
Reaction score: 7,495
Messages: 30,157
Jul 18, 2018
#25
Well, running
freebsd-update fetch pretty much threw a spanner in the works, you really shouldn't have done that.
In order to get things correct again I would start with
rm -rf /var/db/freebsd-update/*. So you have a clean slate to start from. Then
freebsd-update -r 11.2-RELEASE --currently-running
11.1-RELEASE-p9 upgrade. Then
freebsd-update install and follow directions. Do NOT run
freebsd-update fetch until after you have finished the ENTIRE upgrade process.
Reactions:
nik0tine and Lamia
You must log in or register to reply here.
Share:
Reddit
Pinterest
Tumblr
WhatsApp
Email
Link
Forums
Base System
Installing and Upgrading FreeBSD
FreeBSD Style
Contact us
Terms and rules
Privacy policy
Help
RSS
Forum software by XenForo® © 2010-2019 XenForo Ltd.
The mark FreeBSD is a registered trademark of The FreeBSD Foundation and is used by The FreeBSD Project with the permission of The FreeBSD Foundation.
This site uses cookies to help personalise content, tailor your experience and to keep you logged in if you register.
By continuing to use this site, you are consenting to our use of cookies.
Accept
Learn more…
Top






================= https://vulners.com/openvas/OPENVAS:1361412562310105586 ==================





SSH OS Identification
{"id": "OPENVAS:1361412562310105586", "bulletinFamily": "scanner", "title": "SSH OS Identification", "description": "This script performs SSH banner based OS detection.", "published": "2016-03-23T00:00:00", "modified": "2019-05-07T00:00:00", "cvss": {"score": 0.0, "vector": "NONE"}, "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "references": [], "cvelist": [], "type": "openvas", "lastseen": "2019-05-08T12:20:42", "history": [{"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 6, "enchantments": {}, "hash": "1b863fdd932298d8af95907a645b7904867e546c76236c6b7d8e62333e4f7e72", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "1ff868fd3685333c085941a2cdd9b85d", "key": "modified"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}, {"hash": "93f2db139f8fe8c0ea62f2f336d4c125", "key": "sourceData"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2017-08-22T09:18:01", "modified": "2017-08-07T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 6863 2017-08-07 14:00:23Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"$Revision: 6863 $\");\n
script_tag(name:\"last_modification\", value:\"$Date: 2017-08-07 16:00:23 +0200 (Mon, 07 Aug 2017) $\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_kb_item( \"Services/ssh\" );\nif( ! port ) port = 22;\nif( ! get_port_state( port ) ) exit( 0 );\n\nbanner = get_kb_item( \"SSH/banner/\" + port );\nif( ! banner
|| banner == \"\" || isnull( banner ) ) exit( 0 );\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"cisco|FIPS User Access Verification\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Sun\" >< banner )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:::iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-WeOnlyDo-wodFTPD\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 3}, "differentElements": ["modified", "sourceData"], "edition": 6, "lastseen": "2017-08-22T09:18:01"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 29, "enchantments": {"dependencies": {"modified": "2019-05-03T14:20:41", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "06ec41a7d7681fdb476d5382b3e3894e6eac746f4fa964135c7f8ffc2c5a5885", "hashmap": [{"hash": "22dc543a8ae262f2e611ee423cc4b62f", "key": "modified"}, {"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "c1562fdf32533e2e1e0e0adf9d3311b3", "key": "sourceData"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-05-03T14:20:41", "modified": "2019-05-02T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"2019-05-02T04:45:21+0000\");\n
script_tag(name:\"last_modification\", value:\"2019-05-02 04:45:21 +0000 (Thu, 02 May 2019)\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.9p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"19.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( banner =~ \"SSH-[0-9.]+-Sun_SSH\" )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-OpenSSH_for_Windows_7.9\nelse if( \"OpenSSH_for_Windows\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# nb: More detailed OS Detection coverd in gb_netapp_data_ontap_consolidation.nasl\nelse if( egrep( pattern:\"SSH.+Data ONTAP SSH\", string:server_banner ) )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 478}, "differentElements": ["modified", "sourceData"], "edition": 29, "lastseen": "2019-05-03T14:20:41"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 23, "enchantments": {"dependencies": {"modified": "2019-02-14T14:34:14", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "4858e37d9f1ad95bda806de218333f8fdea88cf6bbfe6c61d262ffba6620fc7f", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "ecb0ea0b9429d9f9e8b052fbc72bbfda", "key": "sourceData"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}, {"hash": "dc7bd333fcf4f62e78c15dc6692ca728", "key": "modified"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-02-14T14:34:14", "modified": "2019-02-13T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 13643 2019-02-13 15:33:08Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"$Revision: 13643 $\");\n
script_tag(name:\"last_modification\", value:\"$Date: 2019-02-13 16:33:08 +0100 (Wed, 13 Feb 2019) $\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Sun\" >< banner )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:::iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 209}, "differentElements": ["modified", "sourceData"], "edition": 23, "lastseen": "2019-02-14T14:34:14"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 25, "enchantments": {"dependencies": {"modified": "2019-02-22T13:12:31", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "3cce6dd78c88294a217a0652ac4906e460c2b3ec30f42193fbf77dc066a0577d", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "c20faa9add08865698c8bd9e68410680", "key": "sourceData"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "e42f00f51cbad6d6b7bdf283804aa923", "key": "modified"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-02-22T13:12:31", "modified": "2019-02-21T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 13813 2019-02-21 13:07:21Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"$Revision: 13813 $\");\n
script_tag(name:\"last_modification\", value:\"$Date: 2019-02-21 14:07:21 +0100 (Thu, 21 Feb 2019) $\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Sun\" >< banner )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 220}, "differentElements": ["modified", "sourceData"], "edition": 25, "lastseen": "2019-02-22T13:12:31"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 27, "enchantments": {"dependencies": {"modified": "2019-03-23T14:35:09", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "f4a711a5e009b509bea4a9da8caff2e15df6cdd82d241c51b58dac5fde3cee30", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "65ebbdf0e8a7e82caf89c0febd15eb79", "key": "modified"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "ada2ce0462238faf6d965b059ffa52b6", "key": "sourceData"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-03-23T14:35:09", "modified": "2019-03-22T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 13892 2019-02-26 16:58:03Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"2019-03-22T07:10:47+0000\");\n
script_tag(name:\"last_modification\", value:\"2019-03-22 07:10:47 +0000 (Fri, 22 Mar 2019)\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( banner =~ \"SSH-[0-9.]+-Sun_SSH\" )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-OpenSSH_for_Windows_7.9\nelse if( \"OpenSSH_for_Windows\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );\n", "title": "SSH OS Identification", "type": "openvas", "viewCount": 453}, "differentElements": ["modified", "sourceData"], "edition": 27, "lastseen": "2019-03-23T14:35:09"}], "edition": 30, "hashmap": [{"key": "bulletinFamily", "hash": "bbdaea376f500d25f6b0c1050311dd07"}, {"key": "cvelist", "hash": "d41d8cd98f00b204e9800998ecf8427e"}, {"key": "cvss", "hash": "8cd4821cb504d25572038ed182587d85"}, {"key": "description", "hash": "920d37c9f239a36e35d4a4a98c1f7f32"}, {"key": "href", "hash": "efe3cc4277cca9b95591a2c483c59c78"}, {"key": "modified", "hash": "e69044c9d880838165c3bec0addb66f6"}, {"key": "naslFamily", "hash": "57c29ba219a015e20011ca8641b51476"}, {"key": "pluginID", "hash": "32df85390f0222de2a0eddbf47a81a6f"}, {"key": "published", "hash": "e20a1536f6bff4dbc36b3cef61da7717"}, {"key": "references", "hash": "d41d8cd98f00b204e9800998ecf8427e"}, {"key": "reporter", "hash": "5220829dcbf3aed768125069bc143527"}, {"key": "sourceData", "hash": "6749c3a6762dd354c3c44a7684330d06"}, {"key": "title", "hash": "4e18060f1903ff4454f704e9e8876a57"}, {"key": "type", "hash": "47c1f692ea47a21f716dad07043ade01"}], "hash": "dcf09df484659098cca0a77078e7d7a70a69a3cce95cfc4c17c6e3b762124c49", "viewCount": 740, "enchantments": {"dependencies": {"references": [], "modified": "2019-05-08T12:20:42"}, "score": {"value": -0.3, "vector": "NONE", "modified": "2019-05-08T12:20:42"}, "vulnersScore": -0.3}, "objectVersion": "1.3", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"2019-05-07T06:30:33+0000\");\n
script_tag(name:\"last_modification\", value:\"2019-05-07 06:30:33 +0000 (Tue, 07 May 2019)\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.9p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"19.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( banner =~ \"SSH-[0-9.]+-Sun_SSH\" )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-OpenSSH_for_Windows_7.9\nelse if( \"OpenSSH_for_Windows\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# nb: More detailed OS Detection covered in gb_netapp_data_ontap_consolidation.nasl\nelse if( egrep( pattern:\"SSH.+Data ONTAP SSH\", string:banner ) )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );\n", "naslFamily": "Product detection", "pluginID": "1361412562310105586", "scheme": null}
{}






================= https://webcache.googleusercontent.com/search?q=cache:3zsIBWfqHJUJ:https://vulners.com/openvas/OPENVAS:1361412562310105586+&cd=5&hl=en&ct=clnk&gl=pk ==================





This is Google's cache of https://vulners.com/openvas/OPENVAS:1361412562310105586. It is a snapshot of the page as it appeared on 17 Jul 2019 07:27:20 GMT. The current page could have changed in the meantime. Learn more.Full versionText-only versionView sourceTip: To quickly find your search term on this page, press Ctrl+F or ⌘-F (Mac) and use the find bar.
SSH OS Identification
Search...
Search settings
Search
Help
Login
Search
audit
subscriptions
Stats
Contacts
Blog
AI Score
AI Score
SSH OS Identification
2016-03-23T00:00:00
ID OPENVAS:1361412562310105586
Type openvas
Reporter This script is Copyright (C) 2016 Greenbone Networks GmbH
Modified 2019-05-07T00:00:00
Description
This script performs SSH banner based OS detection.
###############################################################################
# OpenVAS Vulnerability Test
#
# SSH OS Identification
#
# Authors:
# Michael Meyer &lt;michael.meyer@greenbone.net&gt;
#
# Copyright:
# Copyright (c) 2016 Greenbone Networks GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################
if(description)
{
script_oid("1.3.6.1.4.1.25623.1.0.105586");
script_version("2019-05-07T06:30:33+0000");
script_tag(name:"last_modification", value:"2019-05-07 06:30:33 +0000 (Tue, 07 May 2019)");
script_tag(name:"creation_date", value:"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)");
script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:N/C:N/I:N/A:N");
script_tag(name:"cvss_base", value:"0.0");
script_name("SSH OS Identification");
script_category(ACT_GATHER_INFO);
script_family("Product detection");
script_copyright("This script is Copyright (C) 2016 Greenbone Networks GmbH");
script_dependencies("ssh_detect.nasl");
script_require_ports("Services/ssh", 22);
script_mandatory_keys("ssh/server_banner/available");
script_tag(name:"summary", value:"This script performs SSH banner based OS detection.");
script_tag(name:"qod_type", value:"remote_banner");
exit(0);
}
include("ssh_func.inc");
include("host_details.inc");
SCRIPT_DESC = "SSH OS Identification";
BANNER_TYPE = "SSH banner";
port = get_ssh_port( default:22 );
banner = get_ssh_server_banner( port:port );
if( ! banner
|| banner == "" || isnull( banner ) )
exit( 0 );
textbanner = get_kb_item( "SSH/textbanner/" + port );
# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl
if( egrep( pattern:"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$", string:banner ) ||
banner == "SSH-2.0-dropbear" ) {
exit( 0 );
}
# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...
if( banner =~ "^SSH-2.0-libssh[_-][0-9.]+$" ||
banner == "SSH-2.0-libssh" ) {
exit( 0 );
}
# No OS info...
if( banner == "SSH-2.0-SSH_2.0" )
exit( 0 );
# Vendor: "Works with any OS vendor and will function without an OS if needed"
if( egrep( pattern:"^SSH-2\.0-RomSShell_[0-9.]+$", string:banner ) ||
banner == "SSH-2.0-RomSShell" )
exit( 0 );
# Cross-platform / platform independent
if( banner == "SSH-2.0-Mocana SSH" ||
egrep( pattern:"^SSH-2\.0-Mocana SSH [0-9.]+$", string:banner ) )
exit( 0 );
if( egrep( pattern:"^SSH-1\.99-OpenSSH_[0-9.p]+$", string:banner ) ||
egrep( pattern:"^SSH-2\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11
egrep( pattern:"^SSH-2\.0-OpenSSH_[0-9.p]+(\-FIPS\(capable\))?$", string:banner ) ||
banner == "SSH-2.0-OpenSSH" ||
banner == "SSH-2.0-OpenSSH_" )
exit( 0 );
# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl
if( banner == "SSH-2.0-ROSSSH" )
exit( 0 );
#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt
# Order matters, as some banners can include several keywords.
# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)
if( "ubuntu" &gt;&lt; tolower( banner ) )
{
if( "SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"4.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"5.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"5.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"6.06", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"6.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"7.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"7.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"8.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"8.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"9.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"9.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3" &gt;&lt; banner || "SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4" &gt;&lt; banner ||
"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5" &gt;&lt; banner || "SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6" &gt;&lt; banner ||
"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"10.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3" &gt;&lt; banner || "SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4" &gt;&lt; banner || "SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5" &gt;&lt; banner)
{
register_and_report_os( os:"Ubuntu", version:"10.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"11.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"11.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"12.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"12.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"13.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.2p2 Ubuntu-6" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"13.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.6p1 Ubuntu-2" &gt;&lt; banner || "SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"14.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"14.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"15.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.9p1 Ubuntu-2" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"15.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.2p2 Ubuntu-4" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"16.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.3p1 Ubuntu-1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"16.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.4p1 Ubuntu-10" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"17.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.5p1 Ubuntu-10" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"17.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.6p1 Ubuntu-4" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"18.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.7p1 Ubuntu-4" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"18.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.9p1 Ubuntu-10" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"19.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# We don't know the OS version
register_and_report_os( os:"Ubuntu", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "Debian" &gt;&lt; banner || "Raspbian" &gt;&lt; banner )
{
# Special case on Ubuntu 7.10
if( "SSH-2.0-OpenSSH_4.6p1 Debian-5build1" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"7.10", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# Another special case on Ubuntu 13.04
if( "SSH-2.0-OpenSSH_6.1p1 Debian-4" &gt;&lt; banner )
{
register_and_report_os( os:"Ubuntu", version:"13.04", cpe:"cpe:/o:canonical:ubuntu_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.1p1 Debian" &gt;&lt; banner )
{
register_and_report_os( os:"Debian GNU/Linux", version:"5.0", cpe:"cpe:/o:debian:debian_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.5p1 Debian-6" &gt;&lt; banner )
{
register_and_report_os( os:"Debian GNU/Linux", version:"6.0", cpe:"cpe:/o:debian:debian_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here
if( "SSH-2.0-OpenSSH_6.0p1 Debian-4" &gt;&lt; banner || ( "~bpo7" &gt;&lt; banner && "SSH-2.0-OpenSSH_" &gt;&lt; banner ) )
{
register_and_report_os( os:"Debian GNU/Linux", version:"7", cpe:"cpe:/o:debian:debian_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.7p1 Debian-5" &gt;&lt; banner || "SSH-2.0-OpenSSH_6.7p1 Raspbian-5" &gt;&lt; banner || ( "~bpo8" &gt;&lt; banner && "SSH-2.0-OpenSSH_" &gt;&lt; banner )
)
{
register_and_report_os( os:"Debian GNU/Linux", version:"8", cpe:"cpe:/o:debian:debian_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.4p1 Debian-10" &gt;&lt; banner || "SSH-2.0-OpenSSH_7.4p1 Raspbian-10" &gt;&lt; banner || ( "~bpo9" &gt;&lt; banner && "SSH-2.0-OpenSSH_" &gt;&lt; banner ) )
{
register_and_report_os( os:"Debian GNU/Linux", version:"9", cpe:"cpe:/o:debian:debian_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# We don't know the OS version
register_and_report_os( os:"Debian GNU/Linux", cpe:"cpe:/o:debian:debian_linux", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# nb: "VersionAddendum" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config
else if( "FreeBSD" &gt;&lt; banner )
{
if( "SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"7.0", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"7.2", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"8.0", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"8.1", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"9.0", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"10.0", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.2 FreeBSD-20160310" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"11.0", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.2 FreeBSD-20161230" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"11.1", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.5 FreeBSD-20170903" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"11.2", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
if( "SSH-2.0-OpenSSH_7.8 FreeBSD-20180909" &gt;&lt; banner )
{
register_and_report_os( os:"FreeBSD", version:"12.0", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# We don't know the OS version
register_and_report_os( os:"FreeBSD", cpe:"cpe:/o:freebsd:freebsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "OpenBSD" &gt;&lt; banner )
{
# We don't know the OS version
register_and_report_os( os:"OpenBSD", cpe:"cpe:/o:openbsd:openbsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "NetBSD" &gt;&lt; banner )
{
# We don't know the OS version
register_and_report_os( os:"NetBSD", cpe:"cpe:/o:netbsd:netbsd", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "CISCO_WLC" &gt;&lt; banner )
{
register_and_report_os( os:"Cisco Wireless Lan Controller", cpe:"cpe:/o:cisco:wireless_lan_controller", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# e.g.:
# SSH-1.99-Cisco-1.25
# SSH-2.0-Cisco-1.25
# SSH-1.99-Cisco-2.0
# SSH-2.0-Cisco-2.0
else if( banner =~ "^SSH-[0-9.]+-Cisco-[0-9.]+" )
{
register_and_report_os( os:"Cisco IOS", cpe:"cpe:/o:cisco:ios", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( eregmatch( string:banner, pattern:"(cisco|FIPS User Access Verification)", icase:TRUE ) || "Cisco Systems, Inc. All rights Reserved" &gt;&lt; textbanner )
{
register_and_report_os( os:"Cisco", cpe:"cpe:/o:cisco", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( banner =~ "SSH-[0-9.]+-Sun_SSH" )
{
register_and_report_os( os:"SunOS", cpe:"cpe:/o:sun:sunos", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "SSH-2.0-NetScreen" &gt;&lt; banner )
{
register_and_report_os( os:"NetScreen ScreenOS", cpe:"cpe:/o:juniper:netscreen_screenos", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( eregmatch( string:banner, pattern:"SSH-2.0-xxxxxxx|FortiSSH" ) )
{
register_and_report_os( os:"FortiOS", cpe:"cpe:/o:fortinet:fortios", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "OpenVMS" &gt;&lt; banner )
{
register_and_report_os( os:"OpenVMS", cpe:"cpe:/o:hp:openvms", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "SSH-2.0-MS_" &gt;&lt; banner )
{
register_and_report_os( os:"Microsoft Windows", cpe:"cpe:/o:microsoft:windows_10:-:-:iot", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"windows" );
exit( 0 );
}
# SSH-2.0-WeOnlyDo 2.4.3
# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424
# Both from http://www.freesshd.com running on Windows only
else if( "SSH-2.0-WeOnlyDo" &gt;&lt; banner )
{
register_and_report_os( os:"Microsoft Windows", cpe:"cpe:/o:microsoft:windows", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"windows" );
exit( 0 );
}
else if( "SSH-2.0-mpSSH_" &gt;&lt; banner )
{
register_and_report_os( os:"HP iLO", cpe:"cpe:/o:hp:integrated_lights-out", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
else if( "SSH-2.0-Data ONTAP SSH" &gt;&lt; banner )
{
register_and_report_os( os:"NetApp Data ONTAP", cpe:"cpe:/o:netapp:data_ontap", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# Embedded Linux
else if( "SSH-2.0-moxa_" &gt;&lt; banner )
{
register_and_report_os( os:"Linux/Unix", cpe:"cpe:/o:linux:kernel", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
# SolarWinds Network Configuration Manager (NCM) running on Windows only.
else if( "Network ConfigManager SCP Server" &gt;&lt; banner )
{
register_and_report_os( os:"Microsoft Windows", cpe:"cpe:/o:microsoft:windows", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"windows" );
exit( 0 );
}
# SSH-2.0-OpenSSH_for_Windows_7.9
else if( "OpenSSH_for_Windows" &gt;&lt; banner )
{
register_and_report_os( os:"Microsoft Windows", cpe:"cpe:/o:microsoft:windows", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"windows" );
exit( 0 );
}
# nb: More detailed OS Detection covered in gb_netapp_data_ontap_consolidation.nasl
else if( egrep( pattern:"SSH.+Data ONTAP SSH", string:banner ) )
{
register_and_report_os( os:"NetApp Data ONTAP", cpe:"cpe:/o:netapp:data_ontap", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:"unixoide" );
exit( 0 );
}
register_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:"ssh_banner", port:port );
exit( 0 );
JSON Vulners Source
Initial Source
All product names, logos, and brands are property of their respective owners. All company, product and service names used in this website are for identification purposes only. Use of these names, logos, and brands does not imply endorsement.If you are an owner of some content and want it to be removed, please mail to content@vulners.com Vulners, 2018
Protected by
{"id": "OPENVAS:1361412562310105586", "bulletinFamily": "scanner", "title": "SSH OS Identification", "description": "This script performs SSH banner based OS detection.", "published": "2016-03-23T00:00:00", "modified": "2019-05-07T00:00:00", "cvss": {"score": 0.0, "vector": "NONE"}, "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "references": [], "cvelist": [], "type": "openvas", "lastseen": "2019-05-08T12:20:42", "history": [{"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 6, "enchantments": {}, "hash": "1b863fdd932298d8af95907a645b7904867e546c76236c6b7d8e62333e4f7e72", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "1ff868fd3685333c085941a2cdd9b85d", "key": "modified"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}, {"hash": "93f2db139f8fe8c0ea62f2f336d4c125", "key": "sourceData"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2017-08-22T09:18:01", "modified": "2017-08-07T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 6863 2017-08-07 14:00:23Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"$Revision: 6863 $\");\n
script_tag(name:\"last_modification\", value:\"$Date: 2017-08-07 16:00:23 +0200 (Mon, 07 Aug 2017) $\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_kb_item( \"Services/ssh\" );\nif( ! port ) port = 22;\nif( ! get_port_state( port ) ) exit( 0 );\n\nbanner = get_kb_item( \"SSH/banner/\" + port );\nif( ! banner
|| banner == \"\" || isnull( banner ) ) exit( 0 );\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"cisco|FIPS User Access Verification\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Sun\" >< banner )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:::iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-WeOnlyDo-wodFTPD\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 3}, "differentElements": ["modified", "sourceData"], "edition": 6, "lastseen": "2017-08-22T09:18:01"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 29, "enchantments": {"dependencies": {"modified": "2019-05-03T14:20:41", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "06ec41a7d7681fdb476d5382b3e3894e6eac746f4fa964135c7f8ffc2c5a5885", "hashmap": [{"hash": "22dc543a8ae262f2e611ee423cc4b62f", "key": "modified"}, {"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "c1562fdf32533e2e1e0e0adf9d3311b3", "key": "sourceData"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-05-03T14:20:41", "modified": "2019-05-02T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"2019-05-02T04:45:21+0000\");\n
script_tag(name:\"last_modification\", value:\"2019-05-02 04:45:21 +0000 (Thu, 02 May 2019)\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.9p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"19.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( banner =~ \"SSH-[0-9.]+-Sun_SSH\" )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-OpenSSH_for_Windows_7.9\nelse if( \"OpenSSH_for_Windows\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# nb: More detailed OS Detection coverd in gb_netapp_data_ontap_consolidation.nasl\nelse if( egrep( pattern:\"SSH.+Data ONTAP SSH\", string:server_banner ) )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 478}, "differentElements": ["modified", "sourceData"], "edition": 29, "lastseen": "2019-05-03T14:20:41"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 23, "enchantments": {"dependencies": {"modified": "2019-02-14T14:34:14", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "4858e37d9f1ad95bda806de218333f8fdea88cf6bbfe6c61d262ffba6620fc7f", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "ecb0ea0b9429d9f9e8b052fbc72bbfda", "key": "sourceData"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}, {"hash": "dc7bd333fcf4f62e78c15dc6692ca728", "key": "modified"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-02-14T14:34:14", "modified": "2019-02-13T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 13643 2019-02-13 15:33:08Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"$Revision: 13643 $\");\n
script_tag(name:\"last_modification\", value:\"$Date: 2019-02-13 16:33:08 +0100 (Wed, 13 Feb 2019) $\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Sun\" >< banner )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:::iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 209}, "differentElements": ["modified", "sourceData"], "edition": 23, "lastseen": "2019-02-14T14:34:14"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 25, "enchantments": {"dependencies": {"modified": "2019-02-22T13:12:31", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "3cce6dd78c88294a217a0652ac4906e460c2b3ec30f42193fbf77dc066a0577d", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "c20faa9add08865698c8bd9e68410680", "key": "sourceData"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "e42f00f51cbad6d6b7bdf283804aa923", "key": "modified"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-02-22T13:12:31", "modified": "2019-02-21T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 13813 2019-02-21 13:07:21Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"$Revision: 13813 $\");\n
script_tag(name:\"last_modification\", value:\"$Date: 2019-02-21 14:07:21 +0100 (Thu, 21 Feb 2019) $\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Sun\" >< banner )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );", "title": "SSH OS Identification", "type": "openvas", "viewCount": 220}, "differentElements": ["modified", "sourceData"], "edition": 25, "lastseen": "2019-02-22T13:12:31"}, {"bulletin": {"bulletinFamily": "scanner", "cvelist": [], "cvss": {"score": 0.0, "vector": "NONE"}, "description": "This script performs SSH banner based OS detection.", "edition": 27, "enchantments": {"dependencies": {"modified": "2019-03-23T14:35:09", "references": []}, "score": {"value": 7.5, "vector": "NONE"}}, "hash": "f4a711a5e009b509bea4a9da8caff2e15df6cdd82d241c51b58dac5fde3cee30", "hashmap": [{"hash": "57c29ba219a015e20011ca8641b51476", "key": "naslFamily"}, {"hash": "efe3cc4277cca9b95591a2c483c59c78", "key": "href"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "references"}, {"hash": "5220829dcbf3aed768125069bc143527", "key": "reporter"}, {"hash": "65ebbdf0e8a7e82caf89c0febd15eb79", "key": "modified"}, {"hash": "920d37c9f239a36e35d4a4a98c1f7f32", "key": "description"}, {"hash": "32df85390f0222de2a0eddbf47a81a6f", "key": "pluginID"}, {"hash": "4e18060f1903ff4454f704e9e8876a57", "key": "title"}, {"hash": "d41d8cd98f00b204e9800998ecf8427e", "key": "cvelist"}, {"hash": "47c1f692ea47a21f716dad07043ade01", "key": "type"}, {"hash": "8cd4821cb504d25572038ed182587d85", "key": "cvss"}, {"hash": "bbdaea376f500d25f6b0c1050311dd07", "key": "bulletinFamily"}, {"hash": "ada2ce0462238faf6d965b059ffa52b6", "key": "sourceData"}, {"hash": "e20a1536f6bff4dbc36b3cef61da7717", "key": "published"}], "history": [], "href": "http://plugins.openvas.org/nasl.php?oid=1361412562310105586", "id": "OPENVAS:1361412562310105586", "lastseen": "2019-03-23T14:35:09", "modified": "2019-03-22T00:00:00", "naslFamily": "Product detection", "objectVersion": "1.3", "pluginID": "1361412562310105586", "published": "2016-03-23T00:00:00", "references": [], "reporter": "This script is Copyright (C) 2016 Greenbone Networks GmbH", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n# $Id: gb_ssh_os_detection.nasl 13892 2019-02-26 16:58:03Z cfischer $\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"2019-03-22T07:10:47+0000\");\n
script_tag(name:\"last_modification\", value:\"2019-03-22 07:10:47 +0000 (Fri, 22 Mar 2019)\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( banner =~ \"SSH-[0-9.]+-Sun_SSH\" )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-OpenSSH_for_Windows_7.9\nelse if( \"OpenSSH_for_Windows\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );\n", "title": "SSH OS Identification", "type": "openvas", "viewCount": 453}, "differentElements": ["modified", "sourceData"], "edition": 27, "lastseen": "2019-03-23T14:35:09"}], "edition": 30, "hashmap": [{"key": "bulletinFamily", "hash": "bbdaea376f500d25f6b0c1050311dd07"}, {"key": "cvelist", "hash": "d41d8cd98f00b204e9800998ecf8427e"}, {"key": "cvss", "hash": "8cd4821cb504d25572038ed182587d85"}, {"key": "description", "hash": "920d37c9f239a36e35d4a4a98c1f7f32"}, {"key": "href", "hash": "efe3cc4277cca9b95591a2c483c59c78"}, {"key": "modified", "hash": "e69044c9d880838165c3bec0addb66f6"}, {"key": "naslFamily", "hash": "57c29ba219a015e20011ca8641b51476"}, {"key": "pluginID", "hash": "32df85390f0222de2a0eddbf47a81a6f"}, {"key": "published", "hash": "e20a1536f6bff4dbc36b3cef61da7717"}, {"key": "references", "hash": "d41d8cd98f00b204e9800998ecf8427e"}, {"key": "reporter", "hash": "5220829dcbf3aed768125069bc143527"}, {"key": "sourceData", "hash": "6749c3a6762dd354c3c44a7684330d06"}, {"key": "title", "hash": "4e18060f1903ff4454f704e9e8876a57"}, {"key": "type", "hash": "47c1f692ea47a21f716dad07043ade01"}], "hash": "dcf09df484659098cca0a77078e7d7a70a69a3cce95cfc4c17c6e3b762124c49", "viewCount": 717, "enchantments": {"dependencies": {"references": [], "modified": "2019-05-08T12:20:42"}, "score": {"value": -0.3, "vector": "NONE", "modified": "2019-05-08T12:20:42"}, "vulnersScore": -0.3}, "objectVersion": "1.3", "sourceData": "###############################################################################\n# OpenVAS Vulnerability Test\n#\n# SSH OS Identification\n#\n# Authors:\n# Michael Meyer <michael.meyer@greenbone.net>\n#\n# Copyright:\n# Copyright (c) 2016 Greenbone Networks GmbH\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n###############################################################################\n\nif(description)\n{\n
script_oid(\"1.3.6.1.4.1.25623.1.0.105586\");\n
script_version(\"2019-05-07T06:30:33+0000\");\n
script_tag(name:\"last_modification\", value:\"2019-05-07 06:30:33 +0000 (Tue, 07 May 2019)\");\n
script_tag(name:\"creation_date\", value:\"2016-03-23 14:28:40 +0100 (Wed, 23 Mar 2016)\");\n
script_tag(name:\"cvss_base_vector\", value:\"AV:N/AC:L/Au:N/C:N/I:N/A:N\");\n
script_tag(name:\"cvss_base\", value:\"0.0\");\n
script_name(\"SSH OS Identification\");\n
script_category(ACT_GATHER_INFO);\n
script_family(\"Product detection\");\n
script_copyright(\"This script is Copyright (C) 2016 Greenbone Networks GmbH\");\n
script_dependencies(\"ssh_detect.nasl\");\n
script_require_ports(\"Services/ssh\", 22);\n
script_mandatory_keys(\"ssh/server_banner/available\");\n\n
script_tag(name:\"summary\", value:\"This script performs SSH banner based OS detection.\");\n\n
script_tag(name:\"qod_type\", value:\"remote_banner\");\n\n
exit(0);\n}\n\ninclude(\"ssh_func.inc\");\ninclude(\"host_details.inc\");\n\nSCRIPT_DESC = \"SSH OS Identification\";\nBANNER_TYPE = \"SSH banner\";\n\nport = get_ssh_port( default:22 );\nbanner = get_ssh_server_banner( port:port );\nif( ! banner
|| banner == \"\" || isnull( banner ) )\n
exit( 0 );\n\ntextbanner = get_kb_item( \"SSH/textbanner/\" + port );\n\n# nb: Generic banner without OS info covered by gb_dropbear_ssh_detect.nasl\nif( egrep( pattern:\"^SSH-([0-9.]+)-dropbear[_-]([0-9.]+)$\", string:banner ) ||\n
banner == \"SSH-2.0-dropbear\" ) {\n
exit( 0 );\n}\n\n# nb: Supports Linux, UNIX, BSD, Solaris, OS/2 and Windows so exit for a generic banner without OS info...\nif( banner =~ \"^SSH-2.0-libssh[_-][0-9.]+$\" ||\n
banner == \"SSH-2.0-libssh\" ) {\n
exit( 0 );\n}\n\n# No OS info...\nif( banner == \"SSH-2.0-SSH_2.0\" )\n
exit( 0 );\n\n# Vendor: \"Works with any OS vendor and will function without an OS if needed\"\nif( egrep( pattern:\"^SSH-2\\.0-RomSShell_[0-9.]+$\", string:banner ) ||\n
banner == \"SSH-2.0-RomSShell\" )\n
exit( 0 );\n\n# Cross-platform / platform independent\nif( banner == \"SSH-2.0-Mocana SSH\" ||\n
egrep( pattern:\"^SSH-2\\.0-Mocana SSH [0-9.]+$\", string:banner ) )\n
exit( 0 );\n\nif( egrep( pattern:\"^SSH-1\\.99-OpenSSH_[0-9.p]+$\", string:banner ) ||\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+-FIPS_hpn[0-9v]+$\", string:banner ) || # SSH-2.0-OpenSSH_6.1-FIPS_hpn13v11\n
egrep( pattern:\"^SSH-2\\.0-OpenSSH_[0-9.p]+(\\-FIPS\\(capable\\))?$\", string:banner ) ||\n
banner == \"SSH-2.0-OpenSSH\" ||\n
banner == \"SSH-2.0-OpenSSH_\" )\n
exit( 0 );\n\n# Covered in gb_mikrotik_router_routeros_ssh_detect.nasl\nif( banner == \"SSH-2.0-ROSSSH\" )\n
exit( 0 );\n\n#For banners see e.g. https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/unsorted/ssh/ssh_version_strings.txt\n\n# Order matters, as some banners can include several keywords.\n# Ubuntu pattern for new releases last checked on 11/2017 (up to 17.10, LTS releases: 12.04 up to 12.04.5, 14.04 up to 14.04.5, 16.04 up to 16.04.3)\nif( \"ubuntu\" >< tolower( banner ) )\n{\n
if( \"SSH-2.0-OpenSSH_3.8.1p1 Debian 1:3.8.1p1-11ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"4.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_3.9p1 Debian-1ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.1p1 Debian-7ubuntu4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"5.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.2p1 Debian-7ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.06\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"6.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5ubuntu0\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"8.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian-6ubuntu2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"9.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu4\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu5\" >< banner || \"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu6\" >< banner ||\n
\"SSH-2.0-OpenSSH_5.3p1 Debian-3ubuntu7\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu3\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu4\" >< banner || \"SSH-2.0-OpenSSH_5.5p1 Debian-4ubuntu5\" >< banner)\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"10.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-1ubuntu3\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"11.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"12.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-3ubuntu\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.2p2 Ubuntu-6\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6p1 Ubuntu-2\" >< banner || \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-8\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"14.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.9p1 Ubuntu-2\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"15.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2p2 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.3p1 Ubuntu-1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"16.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"17.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.6p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.7p1 Ubuntu-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"18.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.9p1 Ubuntu-10\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"19.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Ubuntu\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"Debian\" >< banner || \"Raspbian\" >< banner )\n{\n
# Special case on Ubuntu 7.10\n
if( \"SSH-2.0-OpenSSH_4.6p1 Debian-5build1\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"7.10\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# Another special case on Ubuntu 13.04\n
if( \"SSH-2.0-OpenSSH_6.1p1 Debian-4\" >< banner )\n
{\n
register_and_report_os( os:\"Ubuntu\", version:\"13.04\", cpe:\"cpe:/o:canonical:ubuntu_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 Debian\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"5.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.5p1 Debian-6\" >< banner )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"6.0\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# nb: Starting with Wheezy (7.x) we have minor releases within the version so we don't use an exact version like 7.0 as we can't differ between the OS in the banner here\n
if( \"SSH-2.0-OpenSSH_6.0p1 Debian-4\" >< banner || ( \"~bpo7\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"7\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.7p1 Debian-5\" >< banner || \"SSH-2.0-OpenSSH_6.7p1 Raspbian-5\" >< banner || ( \"~bpo8\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner )
)\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"8\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.4p1 Debian-10\" >< banner || \"SSH-2.0-OpenSSH_7.4p1 Raspbian-10\" >< banner || ( \"~bpo9\" >< banner && \"SSH-2.0-OpenSSH_\" >< banner ) )\n
{\n
register_and_report_os( os:\"Debian GNU/Linux\", version:\"9\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"Debian GNU/Linux\", cpe:\"cpe:/o:debian:debian_linux\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# nb: \"VersionAddendum\" in https://www.freebsd.org/cgi/man.cgi?query=sshd_config\nelse if( \"FreeBSD\" >< banner )\n{\n
if( \"SSH-2.0-OpenSSH_4.5p1 FreeBSD-20061110\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.1p1 FreeBSD-20080901\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"7.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.2p1 FreeBSD-20090522\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.4p1 FreeBSD-20100308\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"8.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_5.8p2_hpn13v11 FreeBSD-20110503\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"9.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_6.4_hpn13v11 FreeBSD-20131111\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"10.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20160310\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.2 FreeBSD-20161230\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.1\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.5 FreeBSD-20170903\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"11.2\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
if( \"SSH-2.0-OpenSSH_7.8 FreeBSD-20180909\" >< banner )\n
{\n
register_and_report_os( os:\"FreeBSD\", version:\"12.0\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n
}\n\n
# We don't know the OS version\n
register_and_report_os( os:\"FreeBSD\", cpe:\"cpe:/o:freebsd:freebsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"OpenBSD\", cpe:\"cpe:/o:openbsd:openbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"NetBSD\" >< banner )\n{\n
# We don't know the OS version\n
register_and_report_os( os:\"NetBSD\", cpe:\"cpe:/o:netbsd:netbsd\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"CISCO_WLC\" >< banner )\n{\n
register_and_report_os( os:\"Cisco Wireless Lan Controller\", cpe:\"cpe:/o:cisco:wireless_lan_controller\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# e.g.:\n# SSH-1.99-Cisco-1.25\n# SSH-2.0-Cisco-1.25\n# SSH-1.99-Cisco-2.0\n# SSH-2.0-Cisco-2.0\nelse if( banner =~ \"^SSH-[0-9.]+-Cisco-[0-9.]+\" )\n{\n
register_and_report_os( os:\"Cisco IOS\", cpe:\"cpe:/o:cisco:ios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"(cisco|FIPS User Access Verification)\", icase:TRUE ) || \"Cisco Systems, Inc. All rights Reserved\" >< textbanner )\n{\n
register_and_report_os( os:\"Cisco\", cpe:\"cpe:/o:cisco\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( banner =~ \"SSH-[0-9.]+-Sun_SSH\" )\n{\n
register_and_report_os( os:\"SunOS\", cpe:\"cpe:/o:sun:sunos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-NetScreen\" >< banner )\n{\n
register_and_report_os( os:\"NetScreen ScreenOS\", cpe:\"cpe:/o:juniper:netscreen_screenos\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( eregmatch( string:banner, pattern:\"SSH-2.0-xxxxxxx|FortiSSH\" ) )\n{\n
register_and_report_os( os:\"FortiOS\", cpe:\"cpe:/o:fortinet:fortios\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"OpenVMS\" >< banner )\n{\n
register_and_report_os( os:\"OpenVMS\", cpe:\"cpe:/o:hp:openvms\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-MS_\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows_10:-:-:iot\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-WeOnlyDo 2.4.3\n# SSH-2.0-WeOnlyDo-wodFTPD 3.3.0.424\n# Both from http://www.freesshd.com running on Windows only\nelse if( \"SSH-2.0-WeOnlyDo\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-mpSSH_\" >< banner )\n{\n
register_and_report_os( os:\"HP iLO\", cpe:\"cpe:/o:hp:integrated_lights-out\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nelse if( \"SSH-2.0-Data ONTAP SSH\" >< banner )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# Embedded Linux\nelse if( \"SSH-2.0-moxa_\" >< banner )\n{\n
register_and_report_os( os:\"Linux/Unix\", cpe:\"cpe:/o:linux:kernel\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\n# SolarWinds Network Configuration Manager (NCM) running on Windows only.\nelse if( \"Network ConfigManager SCP Server\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# SSH-2.0-OpenSSH_for_Windows_7.9\nelse if( \"OpenSSH_for_Windows\" >< banner )\n{\n
register_and_report_os( os:\"Microsoft Windows\", cpe:\"cpe:/o:microsoft:windows\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"windows\" );\n
exit( 0 );\n}\n\n# nb: More detailed OS Detection covered in gb_netapp_data_ontap_consolidation.nasl\nelse if( egrep( pattern:\"SSH.+Data ONTAP SSH\", string:banner ) )\n{\n
register_and_report_os( os:\"NetApp Data ONTAP\", cpe:\"cpe:/o:netapp:data_ontap\", banner_type:BANNER_TYPE, port:port, banner:banner, desc:SCRIPT_DESC, runs_key:\"unixoide\" );\n
exit( 0 );\n}\n\nregister_unknown_os_banner( banner:banner, banner_type_name:BANNER_TYPE, banner_type_short:\"ssh_banner\", port:port );\n\nexit( 0 );\n", "naslFamily": "Product detection", "pluginID": "1361412562310105586", "scheme": null}
{}






================= https://www.openssh.com/ ==================





OpenSSH
About OpenSSH
Project Goals
Release Notes
History
Features
Security
Specifications
Who uses it
Resources
Manuals
Reporting Bugs
Mailing Lists
List Archives
For OpenBSD
FTP
AnonCVS
CVSWeb
For other systems
Linux
Solaris
FreeBSD
AIX
HP-UX
others..
OpenSSH 8.0 released April 18, 2019
OpenSSH is the premier connectivity tool for remote login with the SSH protocol.
It encrypts all traffic to eliminate eavesdropping, connection hijacking,
and other attacks.
In addition, OpenSSH provides a large suite of secure tunneling capabilities,
several authentication methods, and sophisticated configuration options.
The OpenSSH suite consists of the following tools:
Remote operations are done using
ssh,
scp,
and
sftp.
Key management with
ssh-add,
ssh-keysign,
ssh-keyscan, and
ssh-keygen.
The service side consists of
sshd,
sftp-server, and
ssh-agent.
OpenSSH is developed by a few developers of the
OpenBSD Project and made available
under a BSD-style license.
OpenSSH is incorporated into many commercial products, but very few of those
companies assist OpenSSH with funding.
Contributions towards OpenSSH can be sent to the
OpenBSD Foundation.






================= https://webcache.googleusercontent.com/search?q=cache:dcncP1AK5AsJ:https://www.openssh.com/+&cd=6&hl=en&ct=clnk&gl=pk ==================





This is Google's cache of https://www.openssh.com/. It is a snapshot of the page as it appeared on 20 Jul 2019 16:14:48 GMT. The current page could have changed in the meantime. Learn more.Full versionText-only versionView sourceTip: To quickly find your search term on this page, press Ctrl+F or ⌘-F (Mac) and use the find bar.
OpenSSH
About OpenSSH
Project Goals
Release Notes
History
Features
Security
Specifications
Who uses it
Resources
Manuals
Reporting Bugs
Mailing Lists
List Archives
For OpenBSD
FTP
AnonCVS
CVSWeb
For other systems
Linux
Solaris
FreeBSD
AIX
HP-UX
others..
OpenSSH 8.0 released April 18, 2019
OpenSSH is the premier connectivity tool for remote login with the SSH protocol.
It encrypts all traffic to eliminate eavesdropping, connection hijacking,
and other attacks.
In addition, OpenSSH provides a large suite of secure tunneling capabilities,
several authentication methods, and sophisticated configuration options.
The OpenSSH suite consists of the following tools:
Remote operations are done using
ssh,
scp,
and
sftp.
Key management with
ssh-add,
ssh-keysign,
ssh-keyscan, and
ssh-keygen.
The service side consists of
sshd,
sftp-server, and
ssh-agent.
OpenSSH is developed by a few developers of the
OpenBSD Project and made available
under a BSD-style license.
OpenSSH is incorporated into many commercial products, but very few of those
companies assist OpenSSH with funding.
Contributions towards OpenSSH can be sent to the
OpenBSD Foundation.