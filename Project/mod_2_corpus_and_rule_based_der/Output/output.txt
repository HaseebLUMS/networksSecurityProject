For query: 220 ZXR10 ftp service ready for new user. 

===============http://support.huawei.com/onlinetoolsweb/tsrev/en/content/s/28_edesk_system_software_upload_failure/edesk_system_software_upload_failure_edesk001.html================

===============https://www.amancorp.com/hostgcc/knowledgebase/24/Common-FTP-codes-What-do-they-mean.html================
Common FTP codes. What do they mean? - Knowledgebase - Aman Corp
Login
View Cart
Toggle navigation
Home
Store
Browse All
-----
DNS Hosting
VPS/Dedicated Servers
Website Security
Register a New Domain
Transfer Domains to Us
Announcements
Knowledgebase
Network Status
Contact Us
Account
Login
-----
Forgot Password?
Knowledgebase
Portal Home
Knowledgebase
FTP
Common FTP codes. What do they mean?
Categories
8 Aman Business Mail
10 Aman CMS
2 Aman web design service
1 Application Paths
4 Billing
1 Check Website Satus
6 Control Panel
7 DNS & IP
8 Domain Names
26 E- Mail
14 FTP
39 Google Apps Email
1 Google Postini
2 MySQL
11 Pre-Sales Questions
1 Shopping Cart
1 SSH
1 SSL
23 Video Tutorials
1 Web Hosting Glossary
Categories
Aman Business Mail
(8)
Aman CMS
(10)
Aman web design service
(2)
Application Paths
(1)
Billing
(4)
Check Website Satus
(1)
Control Panel
(6)
DNS & IP
(7)
Domain Names
(8)
E- Mail
(26)
FTP
(14)
Google Apps Email
(39)
Google Postini
(1)
MySQL
(2)
Pre-Sales Questions
(11)
Shopping Cart
(1)
SSH
(1)
SSL
(1)
Video Tutorials
(23)
Web Hosting Glossary
(1)
Common FTP codes. What do they mean?
Here's a list of some of the most common FTP codes you might see:100 Codes The requested action is being taken. Expect a reply before proceeding with a new command. 110 Restart marker reply. 120 Service ready in (n) minutes. 125 Data connection already open, transfer starting. 150 File status okay, about to open data connection. 200 Codes The requested action has been successfully completed. 200 Command okay. 202 Command not implemented.211 System status, or system help reply. 212 Directory status. 213 File status. 214 Help message. 215 NAME system type. (NAME is an official system name from the list in the Assigned Numbers document.) 220 Service ready for new user. 221 Service closing control connection (Logged out if appropriate). 225 Data connection open, but no transfer in progress. 226 Closing data connection. Requested file action successful (file transfer, abort, etc.). 227 Entering Passive Mode.230 User logged in, proceed. 250 Requested file action okay, completed. 257 "PATHNAME" created. 300 Codes The command has been accepted, but the requested action is being held pending receipt of further information. 331 User name okay, need password. 332 Need account for login. 350 Requested file action pending further information. 400 Codes The command was not accepted and the requested action did not take place. The error condition is temporary, however, the action may be requested again. 421 Service not available, closing control connection (May be a reply to any command if the service knows it must shut down). 425 Cannot open data connection. 426 Connection closed, transfer aborted. 450 Requested file action not taken. File unavailable (e.g., file busy). 451 Requested action aborted, local error in processing. 452 Requested action not taken. Insufficient storage space in system. 500 Codes The command was not accepted and the requested action did not take place. 500 Syntax error, command unrecognized. This may include errors such as the command line being too long. 501 Syntax error in parameters or arguments. 502 Command not implemented. 503 Bad sequence of commands. 504 Command not implemented for that parameter. 530 User not logged in. 532 Need account for storing files. 550 Requested action not taken. File unavailable (e.g., file not found, no access). 552 Requested file action aborted, storage allocation exceeded. 553 Requested action not taken. Illegal file name.
3 Users Found This Useful
Was this answer helpful?
Yes
No
Related Articles
Where can I download a free FTP?
We recommend downloading WS FTP from here. We have also heard good things about Filezilla...
Why am I not allowed to upload files?
Make sure you are uploading to the right web directory, which is inside the public_html or www...
Why does my FTP fail to connect?
If your FTP progam is not connecting properly, here are some possible reasons: 1. Your firewall...
My FTP is really slow or disconnects often. Why?
Go into your FTP options and see if passive mode is checked ,if it is, uncheck it. If it is not...
If you are behind a router enable passive FTP mode
If you are behind a router, please enable passive FTP mode.
Powered by WHMCompleteSolution
Support
My Support Tickets
Announcements
Knowledgebase
Downloads
Network Status
Open Ticket
Copyright © 2019 Aman Corp. All Rights Reserved.
×
Close
Title
Loading...
Loading...
Close
Submit
===============https://mina.apache.org/ftpserver-project/ftpserver_commands.html================
FtpServer FTP Commands — Apache MINA
Apache MINA Project
|
MINA
|
AsyncWeb
|
FtpServer
|
SSHD
|
Vysper
Overview
Home
Features
Documentation
Downloads
Sources
FAQ
Related Project
Community
Mailing Lists
Getting Involved
Reporting a Bug
Contributors
Contributing
License
Security
Sponsorship
Thanks
Sponsorship
apache.org
FTP Commands¶
This document describes all the FTP commands implemented.
ABOR¶
Aborts the previous FTP service command and any associated transfer of data.
Server Replies¶
226 ABOR command successful.
ACCT¶
Provides the user's account. Not used by FtpServer.
Server Replies¶
202 Command ACCT not implemented.
APPE¶
Appends data to the end of a file on the remote host. If the file does not already exist, it is created. This command must be preceded by a PORT or PASV command.
Server Replies¶
501 Syntax error.
550 Not a plain file.
550 Permission denied.
150 Opening data connection.
425 Cannot open data connection.
426 Data connection error.
551 Error on output file.
226 Transfer complete.
AUTH¶
Establishes SSL encrypted session. Only SSL type is supported.
Server Replies¶
501 Syntax error.
431 Service is unavailable.
234 AUTH command okay; starting SSL connection.
CDUP¶
Change to parent directory.
Server Replies¶
250 Command okay.
550 No such directory.
CWD¶
Changes the working directory. If directory name is not specified, root directory (/) is assumed.
Server Replies¶
250 Command okay.
550 No such directory.
DELE¶
Deletes the file specified by the provided path.
Server Replies¶
250 Command okay.
450 No permission to delete.
450 Can't delete file.
550 Not a valid file.
501 Syntax error in parameters or arguments.
EPRT¶
The EPRT command allows for the specification of an extended address for the data connection. The extended address MUST consist of the network protocol as well as the network and transport addresses. The format of EPRT is EPRT ||||
Server Replies¶
501 Syntax error.
510 EPRT is disabled.
510 Syntax error.
553 Host unknown.
510 EPRT IP is not same as client IP.
552 Not a valid port number.
200 EPRT command okay.
EPSV¶
The EPSV command requests that a server listen on a data port and wait for a connection.
Server Replies¶
425 Cannot open passive connection.
229 Entering passive mode (<message>).
FEAT¶
Displays the feature list.
Server Replies¶
221 List of all the extensions supported.
HELP¶
Displays the help information.
Server Replies¶
214 Help information.
LANG¶
A new command "LANG" is added to the FTP command set to allow server-FTP process to determine in which language to present server greetings and the textual part of command responses.
Server Replies¶
502 Not yet implemented.
LIST¶
This command causes a list to be sent from the server to the passive DTP. If the pathname specifies a directory or other group of files, the server should transfer a list of files in the specified directory. If the pathname specifies a file then the server should send current information on the file. A null argument implies the user's current working or default directory. The data transfer is over the data connection. This command must be preceded by a PORT or PASV command.
Server Replies¶
150 Opening data connection.
425 Cannot open data connection.
426 Data connection error.
551 File listing failed.
501 Syntax error.
226 Closing data connection.
MDTM¶
Returns the date and time of when a file was modified.
Server Replies¶
501 Syntax error.
550 File unavailable.
213 <timestamp>
MKD¶
This command causes the directory specified in the pathname to be created as a directory (if the pathname is absolute) or as a subdirectory of the current working directory (if the pathname is relative).
Server Replies¶
501 Syntax error.
550 Not a valid file.
550 Already exists.
550 No permission.
250 Directory created.
550 Cannot create directory.
MLSD¶
Causes a list to be sent from the server to the passive DTP
Server Replies¶
150 File status okay; about to open data connection.
226 Closing data connection.
425 Can't open data connection.
426 Data connection error.
501 Syntax error in parameters or arguments.
551 File listing failed.
MODE¶
Set data transfer mode. The valid values are S and Z.
Server Replies¶
501 Syntax error.
504 Not implemented for this command.
200 Command okay.
NLST¶
This command causes a directory listing to be sent from server to user site. The pathname should specify a directory or other system-specific file group descriptor; a null argument implies the current directory. The server will return a stream of names of files and no other information.
Server Replies¶
150 Opening data connection.
425 Cannot open data connection.
426 Data connection error.
551 File listing failed.
501 Syntax error.
226 Closing data connection.
NOOP¶
No operation.
Server Replies¶
200 Command okay.
OPTS¶
Cause the server use optional features for the command specified.
Server Replies¶
500 Execution failed.
501 Syntax error in parameters or arguments.
502 Command OPTS not implemented for ...
Additional return codes available for different OPTS commands.
PASS¶
The argument field is a Telnet string specifying the user's password. This command must be immediately preceded by the USER command.
Server Replies¶
501 Syntax error.
503 Login with USER first.
202 Already logged-in.
421 Maximum anonymous login limit has been reached.
421 Maximum login limit has been reached.
530 Authentication failed.
230 User logged in, proceed.
PASV¶
This command requests the server-DTP to listen on a data port (which is not its default data port) and to wait for a connection rather than initiate one upon receipt of a transfer command. The response to this command includes the host and port address this server is listening on.
Server Replies¶
425 Cannot open passive connection.
227 Entering passive mode (<h1,h2,h3,h4,p1,p2>)
PBSZ¶
protection buffer size.
Server Replies¶
200 Command okay.
PORT¶
The argument is a HOST-PORT specification for the data port to be used in data connection. There are defaults for both the user and server data ports, and under normal circumstances this command and its reply are not needed. If this command is used, the argument is the concatenation of a 32-bit internet host address and a 16-bit TCP port address. This address information is broken into 8-bit fields and the value of each field is transmitted as a decimal number (in character string representation). The fields are separated by commas. A port command would be:
PORT h1,h2,h3,h4,p1,p2
Server Replies¶
501 Syntax error.
510 Syntax error in parameters.
510 Port is disabled.
553 Host unknown.
510 PORT IP mismatch.
552 Invalid port number.
200 Command PORT okay.
PROT¶
Data channel protection level. The supported level values are C, P.
Server Replies¶
501 Syntax error.
431 Security is disabled.
504 Server does not understand the specified protection level.
200 Command PROT okay.
PWD¶
This command causes the name of the current working directory to be returned in the reply.
Server Replies¶
257 "<current directory>"
QUIT¶
Closes connection.
Server Replies¶
200 Goodbye.
REIN¶
Flushes a user, without affecting transfers in progress
Server Replies¶
220 Service ready for new user.
REST¶
The argument field represents the server marker at which file transfer is to be restarted. This command does not cause file transfer but skips over the file to the specified data checkpoint. This command shall be immediately followed by the appropriate FTP service command which shall cause file transfer to resume.
Server Replies¶
501 Syntax error.
501 Not a valid number.
501 Marker cannot be negetive.
350 Restarting at <position>. Send STORE or RETRIEVE to initiate transfer.
RETR¶
This command causes the server-DTP to transfer a copy of the file, specified in the pathname, to the server- or user-DTP at the other end of the data connection. The status and contents of the file at the server site shall be unaffected.
Server Replies¶
501 Syntax error.
550 No such file or directory.
550 Not a plain file.
550 Permission denied.
150 Opening data connection.
425 Cannot open the data connection.
426 Data connection error.
551 Error on input file.
226 Transfer complete.
RMD¶
This command causes the directory specified in the pathname to be removed as a directory (if the pathname is absolute) or as a subdirectory of the current working directory (if the pathname is relative).
Server Replies¶
501 Syntax error.
550 No permission.
550 Not a valid directory.
250 Directory removed.
550 Cannot remove directory.
RNFR¶
This command specifies the old pathname of the file which is to be renamed. This command must be immediately followed by a RNTO command specifying the new file pathname.
Server Replies¶
501 Syntax error.
550 File unavailable.
350 Requested file action pending further information.
RNTO¶
This command specifies the new pathname of the file specified in the immediately preceding RNFR command. Together the two commands cause a file to be renamed.
Server Replies¶
501 Syntax error.
503 Cannot find the file which has to be renamed.
553 Not a valid file name.
553 No permission.
250 Requested file action okay, file renamed.
553 Cannot rename file.
SITE¶
Handle Apache FTP Server specific custom commands. Please see the SITE commands page.
Server Replies¶
200 Command SITE okay.
502 Command SITE not implemented for this argument.
500 Execution failed.
530 Access denied.
SIZE¶
Returns the size of the file in bytes.
Server Replies¶
501 Syntax error.
550 No such file or directory.
550 Not a plain file.
213 <size>
STAT¶
This command shall cause a status response to be sent over the control connection in the form of a reply.
Server Replies¶
211 Statistics information.
STOR¶
This command causes the server-DTP to accept the data transferred via the data connection and to store the data as a file at the server site. If the file specified in the pathname exists at the server site, then its contents shall be replaced by the data being transferred. A new file is created at the server site if the file specified in the pathname does not already exist.
Server Replies¶
501 Syntax error.
550 Invalid path.
550 Permission denied.
150 Opening data connection.
425 Cannot open the data connection.
426 Data connection error.
551 Error on output file.
226 Transfer complete.
STOU¶
This command behaves like STOR except that the resultant file is to be created in the current directory under a name unique to that directory. The 250 Transfer Started response must include the name generated.
Server Replies¶
550 Unique file name error.
550 Permission denied.
150 Opening data connection.
425 Cannot open the data connection.
250 <file> Transfer started.
426 Data connection error.
551 Error on output file.
226 Transfer complete.
STRU¶
The argument is a single Telnet character code specifying file structure. The allowed argument is F.
Server Replies¶
501 Syntax error.
504 Command not implemented.
200 Command okay.
SYST¶
This command is used to find out the type of operating system at the server.
Server Replies¶
215 UNIX Type: Apache FTP Server
TYPE¶
The argument specifies the representation type. The allowed types are A and I.
Server Replies¶
501 Syntax error.
504 Command not implemented.
200 Command okay.
USER¶
The argument field is a Telnet string identifying the user. The user identification is that which is required by the server for access to its file system. This command will normally be the first command transmitted by the user after the control connections are made.
Server Replies¶
501 Syntax error.
230 Already logged-in.
530 Invalid user name.
530 Anonymous connection is not allowed.
421 Maximum anonymous login limit has been reached.
421 Maximum login limit has been reached.
331 Guest login okay, send your complete e-mail address as password.
331 User name okay, need password.
© 2003-2019, The Apache Software Foundation - Privacy Policy
Apache MINA, MINA, Apache Vysper, Vysper, Apache SSHd, SSHd, Apache FtpServer, FtpServer, Apache AsyncWeb, AsyncWeb,
Apache, the Apache feather logo, and the Apache Mina project logos are trademarks of The Apache Software Foundation.
===============https://en.wikipedia.org/wiki/List_of_FTP_server_return_codes================
List of FTP server return codes - Wikipedia
List of FTP server return codes
From Wikipedia, the free encyclopedia
Jump to navigation
Jump to search
FTP server return codes always have three digits, and each digit has a special meaning.[1] The first digit denotes whether the response is good, bad or incomplete:
Range
Purpose
1xx
Positive Preliminary reply
The requested action is being initiated; expect another reply before proceeding with a new command.
(The user-process sending another command before the completion reply would be in violation of protocol; but server-FTP processes should queue any commands that arrive while a preceding command is in progress.)
This type of reply can be used to indicate that the command was accepted and the user-process may now pay attention to the data connections, for implementations where simultaneous monitoring is difficult.
The server-FTP process may send at most, one 1xx reply per command.
2xx
Positive Completion reply
The requested action has been successfully completed.
A new request may be initiated.
3xx
Positive Intermediate reply
The command has been accepted, but the requested action is being held in abeyance, pending receipt of further information.
The user should send another command specifying this information.
This reply is used in command sequence groups.
4xx
Transient Negative Completion reply
The command was not accepted and the requested action did not take place, but the error condition is temporary and the action may be requested again.
The user should return to the beginning of the command sequence, if any. It is difficult to assign a meaning to "transient", particularly when two distinct sites (Server- and User-processes) have to agree on the interpretation. Each reply in the 4xx category might have a slightly different time value, but the intent is that the user-process is encouraged to try again.
A rule of thumb in determining if a reply fits into the 4xx or the 5xx (Permanent Negative) category is that replies are 4xx if the commands can be repeated without any change in command form or in properties of the User or Server (e.g., the command is spelled the same with the same arguments used; the user does not change his file access or user name; the server does not put up a new implementation.)
5xx
Permanent Negative Completion reply
The command was not accepted and the requested action did not take place.
The User-process is discouraged from repeating the exact request (in the same sequence).
Even some "permanent" error conditions can be corrected, so the human user may want to direct his User-process to reinitiate the command sequence by direct action at some point in the future (e.g., after the spelling has been changed, or the user has altered his directory status.)
6xx
Protected reply
The RFC 2228 introduced the concept of protected replies to increase security over the FTP communications. The 6xx replies are Base64 encoded protected messages that serves as responses to secure commands. When properly decoded, these replies fall into the above categories.
The second digit is a grouping digit and encodes the following information:
Range
Purpose
x0x
Syntax
These replies refer to syntax errors, syntactically correct commands that don't fit any functional category, unimplemented or superfluous commands.
x1x
Information
These are replies to requests for information, such as status or help.
x2x
Connections
Replies referring to the control and data connections.
x3x
Authentication and accounting
Replies for the login process and accounting procedures.
x4x
Unspecified as of RFC 959.
x5x
File system
These replies indicate the status of the Server file system vis-a-vis the requested transfer or other file system action.
Below is a list of all known return codes that may be issued by an FTP server.
Code
Explanation
100 Series
The requested action is being initiated, expect another reply before proceeding with a new command.
110
Restart marker replay . In this case, the text is exact and not left to the particular implementation; it must read: MARK yyyy = mmmm where yyyy is User-process data stream marker, and mmmm server's equivalent marker (note the spaces between markers and "=").
120
Service ready in nnn minutes.
125
Data connection already open; transfer starting.
150
File status okay; about to open data connection.
200 Series
The requested action has been successfully completed.
202
Command not implemented, superfluous at this site.
211
System status, or system help reply.
212
Directory status.
213
File status.
214
Help message. Explains how to use the server or the meaning of a particular non-standard command. This reply is useful only to the human user.
215
NAME system type. Where NAME is an official system name from the registry kept by IANA.
220
Service ready for new user.
221
Service closing control connection.
225
Data connection open; no transfer in progress.
226
Closing data connection. Requested file action successful (for example, file transfer or file abort).
227
Entering Passive Mode (h1,h2,h3,h4,p1,p2).
228
Entering Long Passive Mode (long address, port).
229
Entering Extended Passive Mode (|||port|).
230
User logged in, proceed. Logged out if appropriate.
231
User logged out; service terminated.
232
Logout command noted, will complete when transfer done.
234
Specifies that the server accepts the authentication mechanism specified by the client, and the exchange of security data is complete. A higher level nonstandard code created by Microsoft.
250
Requested file action okay, completed.
257
"PATHNAME" created.
300 Series
The command has been accepted, but the requested action is on hold, pending receipt of further information.
331
User name okay, need password.
332
Need account for login.
350
Requested file action pending further information
400 Series
The command was not accepted and the requested action did not take place, but the error condition is temporary and the action may be requested again.
421
Service not available, closing control connection. This may be a reply to any command if the service knows it must shut down.
425
Can't open data connection.
426
Connection closed; transfer aborted.
430
Invalid username or password
434
Requested host unavailable.
450
Requested file action not taken.
451
Requested action aborted. Local error in processing.
452
Requested action not taken. Insufficient storage space in system.File unavailable (e.g., file busy).
500 Series
Syntax error, command unrecognized and the requested action did not take place. This may include errors such as command line too long.
501
Syntax error in parameters or arguments.
502
Command not implemented.
503
Bad sequence of commands.
504
Command not implemented for that parameter.
530
Not logged in.
532
Need account for storing files.
534
Could Not Connect to Server - Policy Requires SSL
550
Requested action not taken. File unavailable (e.g., file not found, no access).
551
Requested action aborted. Page type unknown.
552
Requested file action aborted. Exceeded storage allocation (for current directory or dataset).
553
Requested action not taken. File name not allowed.
600 Series
Replies regarding confidentiality and integrity
631
Integrity protected reply.
632
Confidentiality and integrity protected reply.
633
Confidentiality protected reply.
10000 Series
Common Winsock Error Codes[2] (These are not FTP return codes)
10054
Connection reset by peer. The connection was forcibly closed by the remote host.
10060
Cannot connect to remote server.
10061
Cannot connect to remote server. The connection is actively refused by the server.
10066
Directory not empty.
10068
Too many users, server is full.
See also[edit]
List of FTP commands
List of HTTP status codes
References[edit]
^ RFC 959
^ Windows Socket Error Codes, Microsoft Windows Dev Center
vteError messagesSystem failure
Bomb icon
Fatal system error
Guru Meditation
Kernel panic
Linux kernel oops
Red Ring of Death
Sad Mac
Screen of death
Blue
Black
Application failure
ABEND
Fatal exception error
Segmentation fault
Device and data errors
HTTP 403
HTTP 404
lp0 on fire
Not a typewriter
PC LOAD LETTER
Other
Abort, Retry, Fail?
Bad command or file name
Halt and Catch Fire
HTTP 418
Out of memory
Lists
List of HTTP status codes
List of FTP server return codes
Related
Spinning pinwheel
Windows wait cursor
Retrieved from "https://en.wikipedia.org/w/index.php?title=List_of_FTP_server_return_codes&oldid=867840585"
Categories: Computer errorsFile Transfer ProtocolInternet-related listsHidden categories: Pages using RFC magic links
Navigation menu
Personal tools
Not logged inTalkContributionsCreate accountLog in
Namespaces
ArticleTalk
Variants
Views
ReadEditView history
More
Search
Navigation
Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store
Interaction
HelpAbout WikipediaCommunity portalRecent changesContact page
Tools
What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page
Print/export
Create a bookDownload as PDFPrintable version
Languages
Français日本語РусскийУкраїнська
Edit links
This page was last edited on 8 November 2018, at 10:10 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Developers
Cookie statement
Mobile view
===============https://www.webdigi.co.uk/blog/2009/ftp-using-raw-commands-and-telnet/================
Understanding FTP using raw FTP commands and telnet by Web Development
Web Development
Web Development
Thoughts from London, UK
About
Apps
May 05, 2009
Understanding FTP using raw FTP commands and telnet
Both FTP and SMTP are simple text based protocols. A previous article showed how to check if an email address exists using SMTP commands from the terminal. Here I would like to show you how you can use raw FTP commands to connect to an FTP server, login, traverse directories and even download files. But before we do this we need to understand how FTP is different from the other protocols.
Firstly FTP (File Transfer Protocol) uses two channels, the data channel and the control channel.  This is called out-of-band control. The control channel sends commands to the FTP server and the data channel is used for data (to retrieve files from the server, etc).
Secondly there are two major modes of FTP operation, the active mode and the passive modes. The difference lies in the way the data channels are opened. In Active FTP, the FTP server will connect to the client port and send data to it. In Passive FTP, the FTP server will tell the client which port to connect to for retrieving data. Firewalls can complicate the process on both sides.
In our example, we will use Passive FTP (avoiding firewall issues on client) to download a file using anonymous FTP login to the IETF servers. There are a lot of files on this server by some estimates it is about 4GB. We will pick up a small file called ftpext-charter.txt located in the /ietf/ftpext/ folder on the server.
Open the terminal/command prompt (On windows, Go to Start > Run > type cmd). Once you are on the command prompt, type this command to connect to the FTP server and issue commands
C:\> telnet ftp.ietf.org 21
220 ProFTPD 1.3.1 Server (ProFTPD) [64.170.98.33]
USER anonymous
331 Anonymous login ok, send complete email address as your password
PASS blogger@webdigi.co.uk
230 Anonymous access granted, restrictions apply
CWD ietf/ftpext/
250 CWD command successful
PASV
227 Entering Passive Mode (64,170,98,33,151,31).
RETR ftpext-charter.txt
150 Opening ASCII mode data connection for ftpext-charter.txt (6060 bytes)
226 Transfer complete
QUIT
221 Goodbye.
Commands/Response on control channel
We issued these five commands in the following order at lines 2, 4, 6, 8, 10 and 13.
USER – Send username to the FTP server
PASS  – Send the password (Anonymous servers need email address)
CWD  – Change the working directory on the server
PASV – To enter the passive mode (To let client connect to the server)
RETR – To retrieve a remote file from the server
QUIT – To terminate the connection to the server
Between line 10 and 12, you will notice that the file was downloaded. To start the download, I had to open up another telnet window to open the data channel. To figure out to which IP address and port I had to connect to, we have to look at line number 9. We received a set of numbers (64,170,98,33,151,31) from the server in response to the PASV command. The first four related to the IP address 64.170.98.33 and the last two 151 and 31 help us identify which port to connect to.  Multiply the first by 256 and add it to the second. So, 151 * 256 + 31 which is equal to 38687.  Now that we have the IP address and port number, all we have to do is to open a second terminal and telnet to IP:Port as shown below:
C:\> telnet 64.170.98.33 38687
This will now show you all the contents of the file ftpext-charter.txt being thrown into your second terminal window. Once this is done, you can proceed to type further commands on the control channel (the first terminal window).
Notes:
– The anonymous FTP server on IETF has a 60 second timeout on its control channel connection. Please connect to your own FTP servers they might be more forgiving to humans on terminals.
– FTP is not very secure as you can see the password and username are sent in plain text! Also, there is no encryption as you saw on file downloads or uploads.
– Type HELP once you send your password to see what commands you can issue the server.
– Here is a list of raw FTP commands and the parameters
– Here is a list of anonymous FTP servers
– This is the FTP sequence diagram which explains stuff at DNS and TCP level
– On windows there is a built in command line FTP tool (called ftp). It is useful but it does not show us how to use raw commands and communicate to an FTP server.
– SFTP (SSH File Transfer Protocol), FTPS (FTP over SSL) are more secure ways of using FTP.
The FTP HELP command via terminal
Hope this helps!
21
Comments
Share via Email
Share on Facebook
Share on Twitter
Share on Google+
Also read...
How to check if an email address exists without sending an email?
113
A single kill switch for 90% of the top ten websites
1
Using a mobile device to control a game on your browser
27
Cool new stuff in PHP 5.4
2
Google Analytics for Facebook Fan Pages
408
Comments
Skaldrom Y. Sarg said on May 5, 2009 at 2:01 pm:
Thanks for this post, reminding me of the times we had ONLY text based ftp clients (just a bit more comfortable than telnet). That was about 300 years ago 🙂 …
Mike said on May 5, 2009 at 3:37 pm:
Very informative article thanks a bunch for this. Do you know the reason we need to multiple the 2nd last number and add the last for PASV mode?
Player said on May 5, 2009 at 3:54 pm:
@Mike
64,170,98,33,151,31 are all octets(meaning group of eight). Eight bits have a maximum value of 255 and a minimum of 0. So if you multiply the octet 151 by 256 and add it to 31 you get the port.
Sadjow said on May 6, 2009 at 1:37 pm:
Thanks man!
Very Good!
Best Regards!
Nasir said on January 23, 2010 at 2:02 pm:
Great dude
Guitam said on February 17, 2010 at 3:04 pm:
Thanks for the details on your blog. This is great! Thank you!
AK said on February 24, 2010 at 11:18 am:
Good Information, Short and easy to understand
pradeep said on April 26, 2010 at 12:21 pm:
Whether the last two numbers changes every time when we enter into the passive mode…this thing is not working on mine laptop..tel me plz some suggestion
Paula Jones said on June 8, 2010 at 6:17 am:
Very helpful and so informative, many thanks.
Scott said on September 10, 2010 at 9:22 pm:
Tremendous help.
Thank you it saved me a lot of time.
Shaks said on January 5, 2011 at 1:03 am:
Excellent exlpanation, exactly what i needed.
Thank you very much sir!
vavan said on February 18, 2011 at 12:25 pm:
Thank you, very useful, but how to upload file?
George Jordanov said on March 16, 2011 at 6:35 pm:
@vavan
A month later but hope help you… Uploading files can be done the same way as reading is shown above but instead of RETR command use STOR (and data channel is used to stream data to).
Thanks the author very helpful article.
John Sanabria said on March 21, 2011 at 12:57 am:
neat
Jason Murphy said on May 4, 2011 at 7:02 pm:
Hi,
I’m after some help with FTP RAW commands. I’ve written a FTP client in C++ using winsock. I’m fairly happy with the progress but before calling the STOR subcommand, I’d like to change the local directory. I can’t seem to find help on that anywhere. I’m looking for the FTP RAW equivalent of the LCD command.
Anyone?
Thanks for your help.
Regards, Jason
Franklin said on May 12, 2011 at 7:54 am:
Great, it worked perfectly on my blog
richard said on November 17, 2011 at 1:53 pm:
Great…. do you have one one on how to telnet from windows 7 using smtP?
Federico said on November 17, 2011 at 8:24 pm:
Very nice article, easy to start and complete. Thanks.
mastropiero90 said on December 2, 2011 at 6:30 am:
HI!
First of all, THANKS!
I’m playing around to make my own php ftp client, and I require to understand (at least) the basics about raw FTP commands, and after googling for a while I couldn’t find something easy to diggest, but U have exceeded my expectations with this!
May sound a bit exaggerated.. anyway, it turns out that I am also interested in effective pedagogical methodologies. Piaget comes to my mind, because I see how you’ve realized what would other person need to understand, in order to form his own mental structure of how an FTP transfer is done.
Thanks again.
Best!
Cyberclops said on February 5, 2012 at 3:25 am:
Hi
I’m using a scripting environment in the popular chat program ‘mIRC’, to perform an ftp upload, as I’ve switched to using a Linux environment where ftp .exe won’t run under WINE (WINdows Emulator), and the Linux ftp client doesn’t do what I need (the -s:batch_file.txt switch to send commands listed in a batch file).
The problem I believe I’m having is timing.. From your screenshot I can’t see timestamps, so I don’t know when to execute the STOR command (before, or after streaming the data?). My end-result is an empty file (it’s there, but empty).
Can you please shed some light on this?
Cyberclops said on February 5, 2012 at 3:26 am:
I don’t know why your comments system put http:// in front of ‘ftp.exe’ but I didn’t put it there :s
Comments are closed.
←   read more
===============https://fofa.so/result?qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249SGVpbG9uZ2ppYW5nICYmIHJlZ2lv%0Abj1IZWlsb25namlhbmc%3D================
FOFA Pro - 搜索结果
问题反馈
问题反馈关闭
请详细描述您要反馈的内容
请留下您的手机号或邮箱，方便我们与您联系(选填)
验证码
提交
规则专题
API&SDK
规则列表
Fofa客户端
VIP会员
切换导航
规则列表
规则专题
企业版
API&SDK
客户端
VIP会员
+1积分
登录与注册
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249SGVpbG9uZ2ppYW5nICYmIHJlZ2lv
bj1IZWlsb25namlhbmc=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
输入错误，请输入正确再查询
收藏规则
下载数据
使用API
×Close
Download
文件正在导出，可在个人中心的下载记录查询文件状态
数据文件会保存10天,10天后文件可能会被清除,请尽快下载。
×关闭
网站正文
关闭
正在加载统计信息......
搜索 protocol==ftp && region=Heilongjiang && region=Heilongjiang 获得 19,243 条匹配结果 (独立IP数为
条)， 用时 339 毫秒，模式: extended。
默认只显示一年内的数据，点击 all 链接查看所有。
← 上一页 1 2 3 4 5 6 7 … 1925 下一页 →
221.206.152.65
21
ftp
221.206.152.65
2019-05-21
China
/
Suifenhe
220 FTP service ready.
1.190.174.14
21
ftp
1.190.174.14
2019-05-21
China
/
Harbin
220 FTP service ready.
1.57.45.1
21
ftp
1.57.45.1
2019-05-21
China
220 FTP service ready.
221.206.152.129
21
ftp
221.206.152.129
2019-05-21
China
/
Suifenhe
220 FTP service ready.
221.206.152.5
21
ftp
221.206.152.5
2019-05-21
China
/
Suifenhe
220 FTP service ready.
218.7.166.1
21
ftp
218.7.166.1
2019-05-21
China
220 FTP service ready.
122.158.248.13
21
ftp
122.158.248.13
2019-05-21
China
220 FTP service ready.
218.8.57.166
21
ftp
218.8.57.166
2019-05-21
China
220 Serv-U FTP Server v6.2 for WinSock ready...
122.158.248.17
21
ftp
122.158.248.17
2019-05-21
China
220 FTP service ready.
1.63.168.1
21
ftp
1.63.168.1
2019-05-21
China
220 FTP service ready.
← 上一页 1 2 3 4 5 6 7 … 1925 下一页 →
下载所有图片
正在加载图标信息......
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249SGVpbG9uZ2ppYW5nICYmIHJlZ2lv
bj1IZWlsb25namlhbmc=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
白帽汇
服务热线：400-650-2031
联系邮箱：service@baimaohui.net
地址：北京市朝阳区东三环北路天元港B座10层
产品
企业版>
NOSEC
FOEYE
BCSEC
信息
关于我们
帮助文档
English
&nbsp &nbsp 简体中文
zh-CN
版权所有 © 白帽汇 2015 - 2019. All Rights Reserved 粤ICP备16088626号. Version 3.4.268
===============https://fofa.so/result?qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249R3Vhbmdkb25nICYmIGNvdW50cnk9%0AQ04%3D================
FOFA Pro - 搜索结果
问题反馈
问题反馈关闭
请详细描述您要反馈的内容
请留下您的手机号或邮箱，方便我们与您联系(选填)
验证码
提交
规则专题
API&SDK
规则列表
Fofa客户端
VIP会员
切换导航
规则列表
规则专题
企业版
API&SDK
客户端
VIP会员
+1积分
登录与注册
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249R3Vhbmdkb25nICYmIGNvdW50cnk9
Q04=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
输入错误，请输入正确再查询
收藏规则
下载数据
使用API
×Close
Download
文件正在导出，可在个人中心的下载记录查询文件状态
数据文件会保存10天,10天后文件可能会被清除,请尽快下载。
×关闭
网站正文
关闭
正在加载统计信息......
搜索 protocol==ftp && region=Guangdong && country=CN 获得 124,416 条匹配结果 (独立IP数为
条)， 用时 554 毫秒，模式: extended。
默认只显示一年内的数据，点击 all 链接查看所有。
← 上一页 1 2 3 4 5 6 7 … 12442 下一页 →
58.251.231.111
21
ftp
58.251.231.111
2019-05-21
China
/
Shenzhen
220 bftpd 2.2 at 58.251.231.111 ready.
58.248.11.196
22
ftp
58.248.11.196
2019-05-21
China
220 Microsoft FTP Service
14.156.51.207
21
ftp
14.156.51.207
2019-05-21
China
/
Dongguan
220 Serv-U FTP Server v6.0 for WinSock ready...
183.62.206.177
21
ftp
183.62.206.177
2019-05-21
China
/
Shenzhen
220 Microsoft FTP Service
331 Password required for anonymous.
14.21.17.188
21
ftp
14.21.17.188
2019-05-21
China
/
Shenzhen
220 Serv-U FTP Server v15.0 ready...
218.204.164.125
21
ftp
218.204.164.125
2019-05-21
China
/
Dongguan
220-FileZilla Server version 0.9.41 beta
14.21.17.186
21
ftp
14.21.17.186
2019-05-21
China
/
Shenzhen
220 (vsFTPd 3.0.2)
331 Please specify the password.
119.141.15.197
21
ftp
119.141.15.197
2019-05-21
China
220 Welcome to LZL's FTP Server V3.9.1
61.142.254.61
21
ftp
61.142.254.61
2019-05-21
China
220 MikroTik FTP server (MikroTik 4.17) ready
331 Password required for anonymous
14.156.51.242
21
ftp
14.156.51.242
2019-05-21
China
/
Dongguan
220 Welcome to ASUS RT-AC88U FTP service.
530 This FTP server does not allow anonymous logins.
331 Please specify the password.
← 上一页 1 2 3 4 5 6 7 … 12442 下一页 →
下载所有图片
正在加载图标信息......
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249R3Vhbmdkb25nICYmIGNvdW50cnk9
Q04=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
白帽汇
服务热线：400-650-2031
联系邮箱：service@baimaohui.net
地址：北京市朝阳区东三环北路天元港B座10层
产品
企业版>
NOSEC
FOEYE
BCSEC
信息
关于我们
帮助文档
English
&nbsp &nbsp 简体中文
zh-CN
版权所有 © 白帽汇 2015 - 2019. All Rights Reserved 粤ICP备16088626号. Version 3.4.268
===============https://fofa.so/result?qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249R3Vhbmdkb25nICYmIHBvcnQ9MjE%3D================
FOFA Pro - 搜索结果
问题反馈
问题反馈关闭
请详细描述您要反馈的内容
请留下您的手机号或邮箱，方便我们与您联系(选填)
验证码
提交
规则专题
API&SDK
规则列表
Fofa客户端
VIP会员
切换导航
规则列表
规则专题
企业版
API&SDK
客户端
VIP会员
+1积分
登录与注册
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249R3Vhbmdkb25nICYmIHBvcnQ9MjE=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
输入错误，请输入正确再查询
收藏规则
下载数据
使用API
×Close
Download
文件正在导出，可在个人中心的下载记录查询文件状态
数据文件会保存10天,10天后文件可能会被清除,请尽快下载。
×关闭
网站正文
关闭
正在加载统计信息......
搜索 protocol==ftp && region=Guangdong && port=21 获得 113,906 条匹配结果 (独立IP数为
条)， 用时 143 毫秒，模式: extended。
默认只显示一年内的数据，点击 all 链接查看所有。
← 上一页 1 2 3 4 5 6 7 … 11391 下一页 →
58.251.231.111
21
ftp
58.251.231.111
2019-05-21
China
/
Shenzhen
220 bftpd 2.2 at 58.251.231.111 ready.
14.156.51.207
21
ftp
14.156.51.207
2019-05-21
China
/
Dongguan
220 Serv-U FTP Server v6.0 for WinSock ready...
183.62.206.177
21
ftp
183.62.206.177
2019-05-21
China
/
Shenzhen
220 Microsoft FTP Service
331 Password required for anonymous.
14.21.17.188
21
ftp
14.21.17.188
2019-05-21
China
/
Shenzhen
220 Serv-U FTP Server v15.0 ready...
218.204.164.125
21
ftp
218.204.164.125
2019-05-21
China
/
Dongguan
220-FileZilla Server version 0.9.41 beta
14.21.17.186
21
ftp
14.21.17.186
2019-05-21
China
/
Shenzhen
220 (vsFTPd 3.0.2)
331 Please specify the password.
119.141.15.197
21
ftp
119.141.15.197
2019-05-21
China
220 Welcome to LZL's FTP Server V3.9.1
61.142.254.61
21
ftp
61.142.254.61
2019-05-21
China
220 MikroTik FTP server (MikroTik 4.17) ready
331 Password required for anonymous
14.156.51.242
21
ftp
14.156.51.242
2019-05-21
China
/
Dongguan
220 Welcome to ASUS RT-AC88U FTP service.
530 This FTP server does not allow anonymous logins.
331 Please specify the password.
14.18.79.226
21
ftp
14.18.79.226
2019-05-21
China
/
Guangzhou
220 Serv-U FTP Server v7.3 ready...
← 上一页 1 2 3 4 5 6 7 … 11391 下一页 →
下载所有图片
正在加载图标信息......
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiByZWdpb249R3Vhbmdkb25nICYmIHBvcnQ9MjE=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
白帽汇
服务热线：400-650-2031
联系邮箱：service@baimaohui.net
地址：北京市朝阳区东三环北路天元港B座10层
产品
企业版>
NOSEC
FOEYE
BCSEC
信息
关于我们
帮助文档
English
&nbsp &nbsp 简体中文
zh-CN
版权所有 © 白帽汇 2015 - 2019. All Rights Reserved 粤ICP备16088626号. Version 3.4.268
===============https://fofa.so/result?qbase64=cHJvdG9jb2w9PWZ0cCAmJiBhZnRlcj0iMjAxNy0wMS0wMSIgJiYgcmVnaW9u%0APU5laSBNb25nb2w%3D================
FOFA Pro - 搜索结果
问题反馈
问题反馈关闭
请详细描述您要反馈的内容
请留下您的手机号或邮箱，方便我们与您联系(选填)
验证码
提交
规则专题
API&SDK
规则列表
Fofa客户端
VIP会员
切换导航
规则列表
规则专题
企业版
API&SDK
客户端
VIP会员
+1积分
登录与注册
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiBhZnRlcj0iMjAxNy0wMS0wMSIgJiYgcmVnaW9u
PU5laSBNb25nb2w=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
输入错误，请输入正确再查询
收藏规则
下载数据
使用API
×Close
Download
文件正在导出，可在个人中心的下载记录查询文件状态
数据文件会保存10天,10天后文件可能会被清除,请尽快下载。
×关闭
网站正文
关闭
正在加载统计信息......
搜索 protocol==ftp && after="2017-01-01" && region=Nei Mongol 获得 10,842 条匹配结果 (独立IP数为
条)， 用时 80 毫秒，模式: extended。
← 上一页 1 2 3 4 5 6 7 … 1085 下一页 →
110.18.201.238
21
ftp
110.18.201.238
2017-09-06
China
/
Baotou
220 MosaicNAS FTP server ready.
222.74.209.29
21
ftp
222.74.209.29
2017-09-05
China
/
Baotou
220 ZXR10 ftp service ready for new user.
222.74.209.205
21
ftp
222.74.209.205
2017-09-05
China
/
Baotou
220 Microsoft FTP Service
111.126.207.188
21
ftp
111.126.207.188
2017-09-05
China
/
Baotou
220 MikroTik FTP server (MikroTik 6.24) ready
331 Password required for anonymous
222.74.97.235
21
ftp
222.74.97.235
2017-09-05
China
/
Baotou
220 ZXR10 ftp service ready for new user.
218.21.216.11
25
ftp
218.21.216.11
2017-09-02
China
/
Baotou
220 *****************************************************************************************************
1.180.98.161
21
ftp
1.180.98.161
2017-09-01
China
/
Baotou
220 ZXR10 ftp service ready for new user.
1.180.98.75
21
ftp
1.180.98.75
2017-09-01
China
/
Baotou
220 ZXR10 ftp service ready for new user.
1.180.98.31
21
ftp
1.180.98.31
2017-09-01
China
/
Baotou
220 ZXR10 ftp service ready for new user.
1.30.52.208
21
ftp
1.30.52.208
2017-09-01
China
/
Baotou
220 Netprobe ftp at 1.30.52.208 ready.
← 上一页 1 2 3 4 5 6 7 … 1085 下一页 →
下载所有图片
正在加载图标信息......
×Close
升级到普通会员以上级别用户就可以使用API了。
https://fofa.so/api/v1/search/all?email=${YOUR_EMAIL}&key=${YOUR_KEY}&qbase64=cHJvdG9jb2w9PWZ0cCAmJiBhZnRlcj0iMjAxNy0wMS0wMSIgJiYgcmVnaW9u
PU5laSBNb25nb2w=
API帮助
您还可以参考SDK,下载https://github.com/FOFAPRO
白帽汇
服务热线：400-650-2031
联系邮箱：service@baimaohui.net
地址：北京市朝阳区东三环北路天元港B座10层
产品
企业版>
NOSEC
FOEYE
BCSEC
信息
关于我们
帮助文档
English
&nbsp &nbsp 简体中文
zh-CN
版权所有 © 白帽汇 2015 - 2019. All Rights Reserved 粤ICP备16088626号. Version 3.4.268
===============http://ddecode.com/hexdecoder/?results=270d4353492a40a9c781870c5810746b================
DDecode - Hex,Octal,HTML Decoder
Home
|
PHP Decoder
|
Hex Decoder
|
Hex Decoder - Decoding Hex, Oct and similars.
-----------------------------------------------------------
| | | | _____
__ |
_ \
___
___ ___
__| | ___ _ __
| |_| |/ _ \ \/ / | | | |/ _ \/ __/ _ \ / _` |/ _ \ '__|
|
_
|
__/>
<
| |_| |
__/ (_| (_) | (_| |
__/ |
|_| |_|\___/_/\_\ |____/ \___|\___\___/ \__,_|\___|_|
-----------------------------------------------------------
HTML/Oct/Hex DecoderThis tool will attempt to revert any type of encoding (including Hex, html, Oct, etc).
Very useful for webmasters trying to identify what a specific code is doing (from WordPress themes/plugins or Joomla templates).
Seeing this on your site? Want to get it cleared? Sign up with http://sucuri.net/signup/
Original code:SF-Port21-TCP:V=7.31%I=7%D=11/24%Time=5837C86F%P=i686-pc-windows-windows%r
SF:(NULL,2B,"220\x20ZXR10\x20ftp\x20service\x20ready\x20for\x20new\x20user
SF:\.\r\n")%r(GenericLines,57,"220\x20ZXR10\x20ftp\x20service\x20ready\x20
SF:for\x20new\x20user\.\r\n500\x20Unknown\x20command\.\r\n500\x20Unknown\x
SF:20command\.\r\n")%r(Help,49,"220\x20ZXR10\x20ftp\x20service\x20ready\x2
SF:0for\x20new\x20user\.\r\n502\x20Command\x20not\x20implemented\.\r\n")%r
SF:(SMBProgNeg,2B,"220\x20ZXR10\x20ftp\x20service\x20ready\x20for\x20new\x
SF:20user\.\r\n");Decoded results:SF-Port21-TCP:V=7.31%I=7%D=11/24%Time=5837C86F%P=i686-pc-windows-windows%rSF:(NULL,2B,"220 ZXR10 ftp service ready for new userSF:\.\r\n")%r(GenericLines,57,"220 ZXR10 ftp service ready SF:for new user\.\r\n500 Unknown command\.\r\n500 Unknown\xSF:20command\.\r\n")%r(Help,49,"220 ZXR10 ftp service ready\x2SF:0for new user\.\r\n502 Command not implemented\.\r\n")%rSF:(SMBProgNeg,2B,"220 ZXR10 ftp service ready for new\xSF:20user\.\r\n");Decoding examplesExample 1 - PHP With a mix of Hex and Octal
Example 2 - Javascript encoded to hide an iframe"
Example 3 - Multiple iframes encoded via document.write
Latest decoded results
2019-05-19 var _0xac96=["\x68\x72\x65\x66","\x...
2019-05-19 https://www.google.com/search?q=%3Chtml%3E%3Chead%...
2019-05-19 var _0xe001 = ["\x72\x61\x6E\x64\x6F\x6D&quot...
2019-05-19 [Sun May 19 05:15:14.605319 2019] [:error] [pid 21...
2019-05-19 5\x67\x69\x6E\x2D\x69\x64","\x69\x64&quo...
2019-05-19 \x6C\x65\x6E\x67\x74\x68","\x52\x65\x61\...
2019-05-19 \x69\x6E\x69\x74\x52\x65\x63\x61\x70\x74\x63\x68\x...
2019-05-19 \x73\x74\x61\x74\x75\x73","\x6F\x6B&quot...
2019-05-19 \x74\x79\x70\x65","\x63\x72\x65\x61\x74\...
2019-05-19 \x75\x6E\x64\x65\x66\x69\x6E\x65\x64","\...
2019-05-19 "\x74\x79\x70\x65\x5F\x69\x64","\x4...
2019-05-19 \x68\x74\x74\x70\x73\x3A\x2F\x2F\x73\x6F\x6C\x75\x...
2019-05-19 var _0x1d14=['\x73\x74\x61\x74\x65\x4f\x62\x6a\x65...
2019-05-19 eval(function(p,a,c,k,e,r){e=function(c){return(c&...
2019-05-19 local me=Entity(1) local trace=me:GetEyeTrace() lo...
2019-05-19 <?php /** * * @Package : Themeson.com * don't t...
2019-05-19 ["\x6e\x68\x62\x6f\x66\x71\x6a\x72\x70"]...
2019-05-19 No${"\x47\x4cOBA\x4c\x53"}["e\x7axi...
2019-05-19 \u00e3\u201a\u00a2\u00e3\u201a\u00b5\u00e3\u0192\u...
2019-05-19 <?php goto SbRtu; SbRtu: defined("\x49\116...
2019-05-19 <script type='application/ld+json' class='yoast...
2019-05-19 if(isset($_POST["\97\49\49\68\x4F\84\116\x68\...
2019-05-19 <?phpif(isset($_POST["\97\49\49\68\x4F\84\...
2019-05-19 x6f\x72\x65"](b,l)};x()})(); /*]]>/* */ * ...
2019-05-19 <?php/***Site : http://www.tool.eddiekidiw.com/...
2019-05-19 <?php ${"\x47\x4c\x4fB\x41\x4c\x53"}[...
2019-05-19 {\x22data\x22:\x2244sf38ZukrtvWp57iE\x5C/16KU5HuFw...
2019-05-19 var _$_obify3=["\x6D\x65\x6E\x75\x69\x66\x79&...
2019-05-19 1=%40ini%5Fset%28%22display%5Ferrors%22%2C%220%22%...
2019-05-19 var _$_obify5=["\x4C\x20\x61\x24\x68\x3D\x5B\...
2019-05-19 \x01\x01\x04\x01\x01\x01\x01\xff \x30\x19\x02\x04\...
2019-05-19 <?php$O_0O0_0OO_='403';$O_0__OO0O0='1';$O0_O_00...
2019-05-19 <wbStego size=920600, data="\x9A\xC8\xC3B1...
2019-05-19 var vod_name="
===============https://www.smartfile.com/blog/big-list-ftp-server-response-codes/================
The Big List of FTP Server Response Codes | SmartFile
Toggle navigation
MENU
+1 (877) 336-3453
LOG IN
SIGN UP
The Big List of FTP Server Response Codes
By Curtis Peterson on July 23, 2015
FTP server response codes are helpful for system administrators in charge of their company’s FTP server. Oftentimes, users might see these response codes listed in their favorite FTP client, such as FileZilla.
When troubleshooting a file transfer problem, it’s often helpful to identify the FTP response code that is being thrown around. It’s also important to ask what time of connection they’re using (ie FTP, SFTP or FTPS).
This guide will help you understand each element of the FTP server response code so you can get a better feel of what’s happening. It will also give you a full listing of each error code.
Shortcuts
1st Digit in the FTP Server Code   2nd Digit in the FTP Server Code   3rd Digit in the FTP Server Code   Complete FTP Server Code Listing
FTP Server Response Codes: The First Digit
The first digit in the FTP server code lets you know whether or not the that step was successful. They also tell you what you should expect next. For instance, a 100 level code tells you that the process has started and to expect another code shortly.
Range
Purpose
1xx
Positive Preliminary Reply
The request is being initiated and you should expect another reply before proceeding with a new command. If a user sends another command before the reply completion the server-FTP process should queue the commands while this is in progress. This type of reply can indicate that the command was accepted and the user-process may now pay attention to the data connections, for implementations where simultaneous monitoring is difficult. The server-FTP process may send, at most, one 1xx reply per command.
2xx
Positive Completion Reply
The request was successful. A new request may now be sent.
3xx
Positive Intermediate Reply
The command was accepted but the request is being held in abeyance, pending the receipt of more information. The user should send another command with this information. This reply is used in command sequence groups.
4xx
Transient Negative Completion Reply
The command wasn’t accepted and the request didn’t occur, but the error condition is temporary and the action may be resent. The user should return to the beginning of the command sequence, if any. A rule of thumb in determining if this reply belongs to the 4xx (Temporary Negative) or the 5xx (Permanent Negative) category is that replies are 4xx if the commands can be repeated without any change in command form or in properties of the User or Server.
5xx
Permanent Negative Completion Reply
The command wasn’t accepted and the requested action didn’t occur. The User-process shouldn’t repeat the exact same request (in the same sequence). Some “permanent” error conditions can be fixed, so the human user may want to direct his User-process to reinitiate the command sequence by direct action (e.g., the user has changed his directory status.)
6xx
Protected Reply
The RFC 2228 introduced the concept of protected replies to increase security over the FTP communications. The 6xx replies are Base64 encoded protected messages that serves as responses to secure commands. When decoded, these replies fall into the above categories.
FTP Response Codes: The Second Digit
The second digit in the FTP server code lets you know what group or category the request belongs too. For instance, it tells you if it’s regarding connections or if it’s regarding authentication.
Range
Purpose
x0x
Syntax
These replies refer to syntax errors, syntactically correct commands that don’t fit any functional category, unimplemented or superfluous commands.
x1x
Information
Replies to requests for information, like help or support.
x2x
Connections
Replies regarding the control and data connections.
x3x
Authentication and accounting
Replies for the login process and accounting procedures.
x4x
Unspecified as of RFC 959.
x5x
File system
Indicates the status of the Server file system vis-a-vis the requested transfer or other file system action.
FTP Server Codes: The Third Digit
The third digit in the FTP serve code gives further explanation on what exactly is causing this code. Usually it’s the final piece of the puzzle.
Looking For a User-Friendly FTP Alternative?
Get our guide to a more secure and easier-to-use FTP replacement:
Get the Guide
FTP Server Codes: List of Error Codes
Here is a full list of known FTP server error codes:
Code
Explanation
100 Series
The request has started, expect another reply before proceeding with a new command.
110
Restart marker replay. In this case, the text is exact and not left to the particular implementation; it must read: MARK yyyy = mmmm where yyyy is User-process data stream marker, and mmmm server’s equivalent marker (note the spaces between markers and “=”).
120
Service ready in xx minutes.
125
Data connection is already open and the transfer is starting.
150
File status is okay and about to open data connection.
200 Series
The request was successfully completed.
202
Command was not implemented, superfluous at this site.
211
System status, or system help reply.
212
Directory status.
213
File status.
214
Help message. On how to use the server or the meaning of a particular non-standard command.
215
NAME system type. Where NAME is an official system name from the registry kept by IANA.
220
Service is ready for new user.
221
Service closing control connection.
225
Data connection is open and no transfer is in progress.
226
Closing the data connection. Requested file action successful (for example, file transfer or file abort).
227
Entering Passive Mode (h1, h2, h3, h4, p1, p2).
228
Entering Long Passive Mode (long address, port).
229
Entering Extended Passive Mode (|||port|).
230
User has logged in, proceed. Logged out if appropriate.
231
User has logged out and the service is terminated.
232
Logout command noted, will complete when the transfer done.
234
Specifies that the server accepts the authentication mechanism specified by the client, and the exchange of security data is complete. A higher level nonstandard code created by Microsoft.
250
Requested file action okay and completed.
257
“PATHNAME” created.
300 Series
The command was accepted, but the request is on hold, pending receipt of further information.
331
User name okay, need password.
332
Need account for login.
350
Requested file action pending further information
400 Series
The command wasn’t accepted and the requested action didn’t occur, but the error condition is temporary and the action may be requested again.
421
Service not available, closing control connection. This may be a reply to any command if the service knows it must shut down.
425
Can’t open data connection.
426
Connection closed; transfer aborted.
430
Invalid username or password.
434
Requested host unavailable.
450
Requested file action not taken.
451
Requested action aborted. Local error in processing.
452
Requested action not taken. Insufficient storage space in system.File unavailable (e.g., file busy).
500 Series
Syntax error, command unrecognized and the request did not take place. This may include errors such as command line too long.
501
Syntax error in parameters or arguments.
502
Command not implemented.
503
Bad sequence of commands.
504
Command not implemented for that parameter.
530
Not logged in.
532
Need account for storing files.
550
Request not taken. File unavailable (e.g., file not found, no access).
551
Request aborted. Page type unknown.
552
Requested file action aborted. Exceeded storage allocation (for current directory or dataset).
553
Requested action not taken. File name not allowed.
600 Series
Replies regarding confidentiality and integrity
631
Integrity protected reply.
632
Confidentiality and integrity protected reply.
633
Confidentiality protected reply.
10000 Series
Common Winsock Error Codes
10054
Connection reset by peer. The connection was forcibly closed by the remote host.
10060
Cannot connect to remote server.
10061
Cannot connect to remote server. The connection is actively refused by the server.
10066
Directory not empty.
10068
Too many users, server is full.
Looking for an FTP Alternative? Get Our Full Guide!
Learn the 5 Ways FTP Fails You (Security, Scripting, etc…)
Identify Things to Look for in an FTP Alternative (Accessibility, Scalability, etc…)
Discover Available Alternatives that Make Your Job Easier
Sources: SmartFile’s I.T. Personnel, Wikipedia
Related Posts
File Size Limits for Uploads through Web Browsers
How Hosted File Sharing & FTP Help You Scale ...
The Difference Between SFTP & FTPS and Why It...
Cloud-Based Storage for Small Business
Related Topics & Tags: FTP
FTP clients ftp codes ftp commands ftp server ftp server codes
About
Curtis Peterson
I'm the Digital Marketing Manager for SmartFile who loves content, email marketing and web analytics. As a child, I built awesome websites with animated starry night backgrounds and multi-colored font headers on AngelFire and GeoCities.
View all posts by Curtis Peterson
Leave a Reply Cancel reply
Your email address will not be published. Required fields are marked *Comment Name *
Email *
Website
Post navigation
Previous Previous post: Designing Awesome IT DashboardsNext Next post: The Ultimate FTP Commands List
SmartFile is a business file management platform that gives you more control, compliance and security.
CLICK HERETAP HERE TO SIGN UP
Solutions
On-prem File Management
Global File Transfer
Internal File Server
Software Defined Storage
Business File Sharing
FTP Hosting
Managed File Transfer (MFT)
Virtual Data Room
Private Cloud Environment
Hybrid File Management
Industries
Government
Legal
Universities
Pharma
Energy
Construction
Banking
Healthcare
Agencies
Manufacturing
Platform
Secure File Sharing
Building Blocks
FileHubTM (On-Prem)
Cloud
Developer
Channel Partners
White Label Reseller
Feature Overview
Solution Finder
Support
Support
How To
FAQs
System Status
API Docs
Developer Forum
Suggest a Feature
Custom Branding
Resources
Whitepapers
Case Studies
Infographics
Blog
Company
About Us
Careers
News
Press Releases
Customers
Contact
Press Kit
Terms
Privacy
SLA
Site Map
© 2016 SmartFile. All rights reserved.
X
Business Cloud
Access your files from anywhere, on any browser, or any FTP client. An easy-to-use web interface with security for business.
Sign Up
FileHubTM / On-premise
Secure file management behind your firewall. Layer SmartFile on top of existing storage or host your own private environment.
Sign Up
Developer API
Strictly API based (no interface) file management tools for agile developers that need a quick way to send, share, and host.
Sign Up
===============https://shahmeeramir.com/penetration-testing-of-an-ftp-server-19afe538be4b================
Penetration Testing of an FTP Server – Shahmeer AmirHomepageHomepageSign inGet startedAbout mePublicationsAchievementsNewsContactPenetration Testing of an FTP ServerShahmeer AmirBlockedUnblockFollowFollowingSep 15, 2017Welcome to Internal penetration testing on FTP server where you will learn FTP installation and configuration, enumeration and attack, system security and precaution. As you know that File Transfer Protocol (FTP) used for the transfer of computer files between a client and server in a network via port 21.RequirementFTP Server: ubuntuAttacker system: Kali LinuxClient system: windowFTP InstallationVsftpd stand for Very secure FTP daemon is an FTP server for Unix-like systems, including Linux.Let’s start by typing following command to install vsftpd for FTP service.apt-get install vsftpdThis will start FTP service on port 21FTP ScanningScanning plays an important role in penetration testing because through scanning attacker make sure which services and open ports are available for enumeration and attack.Here we are using nmap for scanning port 21.nmap -p 21 192.168.0.106If service is activated in targeted server then nmap show open STATE for port 21.Anonymous LoginFTP users may authenticate themselves with a clear-text sign-in protocol, normally in the form of a username and password, but can connect anonymously if the server is configured to allow it.If anonymous login is allowed by admin to connect with FTP then anyone can login into server. An attacker can easily search for anonymous login permission using following metasploit exploit.use auxiliary/scanner/ftp/anonymousmsf auxiliary(anonymous) >set rhosts 192.168.0.106msf auxiliary(anonymous) >exploitFrom given image you can observe that it is showing permission READ from FTP server.Connect client to FTP Server through WinSCPNow let’s ensure whether we can connect to FTP server as anonymous user or not.Protocol to: FTPEncryption To: No EncryptionHost name: IP of the FTP ServerPort: 21Username and Password: anonymous: anonymous.Click on loginOhh!! Great, we have got FTP access through anonymous user.Similarly an attacker can also get access of your FTP server therefore it is quite important for admin that he should not give any permission to anonymous user for login into server.Disable Anonymous LoginAgain in order to secure your server from anonymous user login then follow given below steps:Open confSet anonymous enable = NOservice vsftpd restartNow repeat the attack to verify for anonymous login permission using metasploit as above. But this time exploit will fail to take out information of anonymous user login permission which you can confirm from given below image.Enumerating FTP BannerAn attacker always perform enumeration for finding important information such as software version which known as Banner Grabbing and then identify it state of vulnerability against any exploit.Open the terminal in your kali Linux and Load metasploit framework; now type following command to scan for FTP version.use auxiliary/scanner/ftp/ftp_versionmsf auxiliary(ftp_version) > set rhosts 192.168.0.106msf auxiliary(ftp_version) > exploitFrom given image you can read the highlighted text which is showing vsftpd 3.0.2 is the installed version of FTP on target’s system.Hiding BannerAs we had discussed above how a banner grabbing can expose loopholes of any software or service running on remote system therefore after installing any service always hide their software versions.Admin should make following changes in their configuration file to prevent banner information.Open conf fileEnable the comment “ftp_banner=Welcome to blah FTP service” by removing # from front of it.Now save the whole text file after modification as shown in given image. Now it will not disclose banner information. Now restart the service using following command.service vsftpd restartLet’s verify version of running service after hiding banner through nmap version scan.nmap -p 21 -sV 192.168.0.106Wonderful!! We are successful in hiding banner which you can confirm from given image.FTP sniffing and Brute Force AttackThough admin has hide the banner and disabled anonymous user but still attack has potential to steal credential for unauthorized access.An attacker can take help of sniffing tools which can sniff the data packet travelling between server and client in a network and retrieve credential, this is known as sniffing, after then use them for unauthorized access. As we have discussed above FTP users may authenticate themselves with a clear-text sign-in protocol for username and password.Similarly we had captured TCP packet through wireshark for sniffing FTP credential, from given image you can observe User: raj and password: 123 had login successfully.Use SSL Certificate to prevent Credential stealingSSL stands for Secure Sockets Layer, the protocol which provides secure, encrypted communications between server and client, this encrypt data packet travelling between server-client networks.Although attacker can sniff network data packet but will be not able to read fetched information because entire data will show in the form of cipher text.Here administrations need to generate their own SSL certificate for secure authentication. Make the directory where the SSL certificate keys will be stored.mkdir /etc/ssl/certificatesType following command which generate a SSL certificate inside certificates directory using rsa: 2048 encryption valid for 365 days.openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/certificates/vsftpd.pem -out /etc/ssl/certificates/vsftpd.pemFor generating new private key it requires information such as Country name, state, email address and etc as shown given below image.Now we need to open vsftpd.conf file for changing default setting by adding few line at the end of file.rsa_cert_file=/etc/ssl/certificates/vsftpd.pemrsa_private_key_file=/etc/ssl/certificates/vsftpd.pemssl_enable=YESallow_anon_ssl=NOforce_local_data_ssl=YESforce_local_logins_ssl=YESssl_tlsv1=YESssl_sslv2=NOssl_sslv3=NOrequire_ssl_reuse=NOssl_ciphers=HIGHYou can confirm it as shown in given image now save the changes and restart the service.service vsftpd restartEstablish TSL/SSL connection with FTP through WinSCPNow let’s ensure whether we can connect to FTP server as anonymous user or not.Protocol to: FTPEncryption To: TSL/SSL Explicit encryptionHost name: IP of the FTP ServerPort: 21Username and Password: raj: 123Click on loginNow server will send certificate to authorized user click on yes to store certificate and continue the encrypted connecting.If attacker will sniff network packets he will get cipher text as shown in given image. In this way we can prevent sniffing from stealing credential in any network.FTP Brute force AttackAnother way to steal credential is Brute force attack on FTP Server using Metasploit.Open the terminal in your kali Linux and Load metasploit framework now type following command to Brute force FTP login.use auxiliary/scanner/ftp/ftp_loginmsf auxiliary(ftp_login) > set rhosts 192.168.01.106msf auxiliary(ftp_login) > set user_file /root/Desktop/user.txtmsf auxiliary(ftp_login) > set pass_file /root/Desktop/pass.txtmsf auxiliary(ftp_login) > set stop_on_success truemsf auxiliary(ftp_login) > exploitFrom given image you can observe that our FTP server is not secure against brute force attack because it is showing matching combination of username: raj and password: 123 for login.Once attack steals your username and password, he try to login into server as authorized user and then can perform mischievous action such as steal your important data or replace with malicious file.Bravo!! You can observe that using raj: 123 we had login successfullyHence our server is not secure against such kind of attack so let’s protect our FTP server.A threshold account lockout policy in windows which locked an account after certain numbers of ttempt that can be possible in UNIX also through Iptables chain rule.Here admin can set iptable chain rules for certain number of login attempts and if user crossed the define number then account will get locked for some time period as specified by admin.Type the given below command to set iptable chain rule for account lockout policy:iptables -I INPUT -p tcp –dport 21 -i eth0 -m state –state NEW -m recent –setiptables -I INPUT -p tcp –dport 21 -i eth0 -m state –state NEW -m recent –update –seconds 120 –hitcount 3 -j DROPNow this above rule will allow only 3 chances for login into FTP server otherwise locked the account for 120 seconds (2 minutes).service vsftpd restartLet’s ensure iptable chain rule working by making brute force attack as above.Great!! It has prevented by stopping brute force after 3 attempts but will get activated after 2 minute therefore admin should locked the account for long period of time.Admin can take help vsftpd.log to view client IP who try to connect with vsftpd server.cd /etc/vsftpd.logtail vsftpd.ogAllow specific IP to connect vsftpdNow open hosts.allow file from inside /etc to allow valid user to connect with server securely through specific IP.At the end of text file enter specific IP to whom you want to give permission for establishing connection as shown in given image.vsftpd: 192.168.0.104Restrict IP to connect vsftpdIt quite important that admin should restrict all IPs other than allowed IP (192.168.0.106) to protect network from establishing connect from unknown IP.Open /etc/hosts.deny and specify list of hosts whom you want don’t to allow accessing into the system.Vsftpd: AllNow open configure file of vsftpd and add following lines:# TCP WrappersTcp_wreappers= YesRestart the service vsftpd “service vsftpd restart”When valid user try to connect with another IP then server will not allow established connection as shown in given image.FTP Port forwardingAs we know port 21 is use as default port for FTP service therefore we can also secure port from 21 to another port.Open vsftpd.conf file and follow given bellow steps:Disable connect from port 20=N0Add listen_port=5000service vsftpd restartNow try to connect with FTP server via port 5000 with valid user credential and IP.Great!!! We are successfully connected with FTP server via port 5000 in this way internal penetration testing helps us in system and network security.Note: Always restart the vsftpd service after making any changes in its configuration file.HackingFtpCybersecurityEthical Hacking466 claps1BlockedUnblockFollowFollowingShahmeer AmirShahmeer Amir is an Ethical Hacker, A Cyber security researcher and a bug bounty hunter from Pakistan.FollowShahmeer AmirHack-o-prenuerShahmeer AmirHack-o-prenuerFollow466Never miss a story from Shahmeer Amir, when you sign up for Medium. Learn moreGet updatesGet updates
===============http://www.coreftp.com/docs/web1/Connecting_to_a_FTP_server.htm================
Connecting to a FTP server
Connecting to a FTP server
In order to connect to a FTP server, we will first set up a site in
the Site Manager.
To get to the Site Manager, click on the    button
on the top left hand of the screen
or the    button
on the right side of the main window.
Site Manager
Once you have started up the site manager, the first thing you want
to do is click on the "new site" button.  This
will set up a new site profile that we will use to connect to a FTP server.
The most critical pieces of information that are needed to connect to
a server are:
1:  Host,
Internet Address (IP), or URL.
2:  Username
3:  Password
This information is usually provided by your ISP or server provider.
The only additional information your ISP may provide is an alternative
port.  In
most cases the port will always be 21 for standard and SSL FTP connections
and 22 for SSH.
For this example, we will use the following information to connect to
an anonymous FTP server.  Anonymous
servers are commonly used as archives where files and updates can be retrieved
for various software packages.  This
example is our first test to make sure you can connect to an FTP server
successfully.
Host:  ftp.microsoft.com
Username:  anonymous
Password:  email@coreftp.com
Using this information, we enter it into the site profile as follows:
You have probably already noticed that you can hit the anonymous button
and it will fill in the username and password for you.
Once this information has been entered, click the "connect"
button and you should see the following connection dialog:
This log shows the progress of the connection being established.  Remember
that if you are using a dialup account, you need to already be connected
to the internet.  If
the connection is made, the connection dialog will disappear and you should
be returned to the main Core FTP screen.
Upon successful connection, you will see the right (remote) list of
files listed.  These
are files that are on the remote server.
Once you have been able to connect to this anonymous FTP server, try
creating a new site and entering in the server information (host, username,
password) that your ISP or web host provider gave to you.
If you can connect using your own information, you have now completed
the first step in using FTP!